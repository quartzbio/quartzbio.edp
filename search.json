[{"path":"https://quartzbio.github.io/quartzbio.edp/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 QuartzBio (www.quartz.bio) Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Caplan. Author, maintainer. Vidya Caplan. Contributor. Jakub Stepniak. Contributor. Dragoș Moldovan-Grünfeld. Contributor. Karl Forner. Author. Marc Lamarine. Contributor. QuartzBio. Copyright holder, funder.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Caplan D, Forner K (2025). quartzbio.edp: Official QuartzBio EDP API Client. R package version 0.99.2, https://github.com/quartzbio/quartzbio.edp, https://quartzbio.github.io/quartzbio.edp/.","code":"@Manual{,   title = {quartzbio.edp: The Official QuartzBio EDP API Client},   author = {David Caplan and Karl Forner},   year = {2025},   note = {R package version 0.99.2, https://github.com/quartzbio/quartzbio.edp},   url = {https://quartzbio.github.io/quartzbio.edp/}, }"},{"path":"https://quartzbio.github.io/quartzbio.edp/index.html","id":"quartzbio-edp-for-r-page-build-status-pipeline-status","dir":"","previous_headings":"","what":"The Official QuartzBio EDP API Client","title":"The Official QuartzBio EDP API Client","text":"package contains QuartzBio EDP R language bindings EDP (Enterprise Data Platform) API. Features: Authentication Parallelization dataset queries Progress report S3 methods Portability platforms: Linux, Windows, OS X. Please see legacy SolveBio documentation information platform.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/index.html","id":"beta-release","dir":"","previous_headings":"","what":"Beta Release","title":"The Official QuartzBio EDP API Client","text":"-going migration legacy solvebio R API new quartzbio.edp package. backwards compatibility currently maintained providing legacy SolveBio R client new client. See ChangeLog updates","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"The Official QuartzBio EDP API Client","text":"Installing package requires installed R environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/index.html","id":"installation-from-github","dir":"","previous_headings":"Installation","what":"installation from GitHub","title":"The Official QuartzBio EDP API Client","text":"","code":"remotes::install_github(\"quartzbio/quartzbio.edp\", dependencies = TRUE, ref = \"main\")"},{"path":"https://quartzbio.github.io/quartzbio.edp/index.html","id":"rcppsimdjson-and-cxx17","dir":"","previous_headings":"Installation","what":"RcppSimdJson and CXX17","title":"The Official QuartzBio EDP API Client","text":"quartzbio.edp uses RcppSimdJson R package speed. older systems, RcppSimdJson requires CXX17 compatible C++ compiler, even installed pre-compiled binary package.. case, can manually install CXX17 compiler. resources: https://www.geeksforgeeks.org/complete-guide--install-c17--windows/ https://gasparri.org/2020/07/30/installing-c17--c20--ubuntu--amazon-linux/ case, RcppSimdJson optional. installed, quartzbio.edp work seamlessly degraded mode.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/index.html","id":"complete-reproducible-installation-example-using-a-tidyverse-qbrocker-image","dir":"","previous_headings":"Installation","what":"complete reproducible installation example using a tidyverse qbrocker image","title":"The Official QuartzBio EDP API Client","text":"","code":"# run a shell inside the tidyverse container docker run -ti --rm rocker/tidyverse  bash  # use the pre-installed installGithub.r script installGithub.r -d TRUE quartzbio/quartzbio.edp  ### OR: run R and use the `install_github()` function R >remotes::install_github(\"quartzbio/quartzbio.edp\", dependencies = TRUE)"},{"path":"https://quartzbio.github.io/quartzbio.edp/index.html","id":"documentation","dir":"","previous_headings":"","what":"documentation","title":"The Official QuartzBio EDP API Client","text":"Github public quartzbio.edp source repository Github quartzbio.edp online package documentation","code":""},{"path":[]},{"path":"https://quartzbio.github.io/quartzbio.edp/index.html","id":"connectionauthentication","dir":"","previous_headings":"Usage","what":"connection/authentication","title":"The Official QuartzBio EDP API Client","text":"See Connection EDP host vignette details. Get Authentication Token. can obtained Personal Access Tokens Save ~/.qb/edp.json file default EDP configuration profile. ~/.qb/edp.json may look like: package functions use default profile default use explicit configuration. example:","code":"{   \"default\": {     \"secret\": \"PUT_HERE_TOUR_AUTHENTICATION_TOKEN\",     \"host\": \"https://api.solvebio.com\"   } } library(quartzbio.edp) User() Vaults() Folders()"},{"path":"https://quartzbio.github.io/quartzbio.edp/index.html","id":"articles","dir":"","previous_headings":"","what":"Articles","title":"The Official QuartzBio EDP API Client","text":"Vignettes","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Annotator.annotate.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate a data table/frame with additional fields. — Annotator.annotate","title":"Annotate a data table/frame with additional fields. — Annotator.annotate","text":"Annotate data table/frame additional fields.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Annotator.annotate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate a data table/frame with additional fields. — Annotator.annotate","text":"","code":"Annotator.annotate(   records,   fields,   include_errors = FALSE,   raw = FALSE,   env = get_connection() )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Annotator.annotate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate a data table/frame with additional fields. — Annotator.annotate","text":"records data annotate data frame. fields fields add. include_errors whether include errors output. raw whether return raw response. env Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Application.all.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the metadata about all application on QuartzBio EDP available to the current user. — Application.all","title":"Retrieve the metadata about all application on QuartzBio EDP available to the current user. — Application.all","text":"Retrieve metadata application QuartzBio EDP available current user.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Application.all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the metadata about all application on QuartzBio EDP available to the current user. — Application.all","text":"","code":"Application.all(env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Application.all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the metadata about all application on QuartzBio EDP available to the current user. — Application.all","text":"env Custom client environment. ... Additional query parameters, passed .request().","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Application.all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the metadata about all application on QuartzBio EDP available to the current user. — Application.all","text":"","code":"if (FALSE) { # \\dontrun{ Application.all() } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Application.create.html","id":null,"dir":"Reference","previous_headings":"","what":"Application.create — Application.create","title":"Application.create — Application.create","text":"Create new QuartzBio EDP application.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Application.create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Application.create — Application.create","text":"","code":"Application.create(name, redirect_uris, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Application.create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Application.create — Application.create","text":"name name application. redirect_uris list space-separated OAuth2 redirect URIs. env (optional) Custom client environment. ... (optional) Additional application attributes.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Application.create.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Application.create — Application.create","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Application.create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Application.create — Application.create","text":"","code":"if (FALSE) { # \\dontrun{ Application.create(   name = \"My new application\",   redirect_uris = \"http://localhost:3838/\" ) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Application.delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Application.delete — Application.delete","title":"Application.delete — Application.delete","text":"Delete specific application QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Application.delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Application.delete — Application.delete","text":"","code":"Application.delete(client_id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Application.delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Application.delete — Application.delete","text":"client_id client ID application. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Application.delete.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Application.delete — Application.delete","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Application.delete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Application.delete — Application.delete","text":"","code":"if (FALSE) { # \\dontrun{ Application.delete(\"abcd1234\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Application.retrieve.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the metadata about a specific application QuartzBio EDP. — Application.retrieve","title":"Retrieve the metadata about a specific application QuartzBio EDP. — Application.retrieve","text":"Retrieve metadata specific application QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Application.retrieve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the metadata about a specific application QuartzBio EDP. — Application.retrieve","text":"","code":"Application.retrieve(client_id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Application.retrieve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the metadata about a specific application QuartzBio EDP. — Application.retrieve","text":"client_id client ID application. env Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Application.retrieve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the metadata about a specific application QuartzBio EDP. — Application.retrieve","text":"","code":"if (FALSE) { # \\dontrun{ Application.retrieve(\"abcd1234\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Application.update.html","id":null,"dir":"Reference","previous_headings":"","what":"Application.update — Application.update","title":"Application.update — Application.update","text":"Updates attributes existing application.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Application.update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Application.update — Application.update","text":"","code":"Application.update(client_id, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Application.update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Application.update — Application.update","text":"client_id client ID application. env (optional) Custom client environment. ... Application attributes change.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Application.update.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Application.update — Application.update","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Application.update.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Application.update — Application.update","text":"","code":"if (FALSE) { # \\dontrun{ Application.update(   \"abcd1234\",   name = \"New app name\" ) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.all.html","id":null,"dir":"Reference","previous_headings":"","what":"Beacon.all — Beacon.all","title":"Beacon.all — Beacon.all","text":"Retrieves metadata beacons QuartzBio EDP accessible current user.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beacon.all — Beacon.all","text":"","code":"Beacon.all(env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beacon.all — Beacon.all","text":"env (optional) Custom client environment. ... (optional) Additional query parameters.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.all.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Beacon.all — Beacon.all","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beacon.all — Beacon.all","text":"","code":"if (FALSE) { # \\dontrun{ Beacon.all() } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.create.html","id":null,"dir":"Reference","previous_headings":"","what":"Beacon.create — Beacon.create","title":"Beacon.create — Beacon.create","text":"Add new beacon existing beacon set. beacon set must already exist order add beacons.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beacon.create — Beacon.create","text":"","code":"Beacon.create(   beacon_set_id,   vault_object_id,   title,   env = get_connection(),   ... )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beacon.create — Beacon.create","text":"beacon_set_id ID parent beacon set. vault_object_id ID vault object (.e. dataset) queried beacon. title title displayed beacon. env (optional) Custom client environment. ... (optional) Additional beacon attributes (description params).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.create.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Beacon.create — Beacon.create","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beacon.create — Beacon.create","text":"","code":"if (FALSE) { # \\dontrun{ Beacon.create(   beacon_set_id = \"1234\",   vault_object_id = \"1234567890\",   title = \"My new beacon\" ) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Beacon.delete — Beacon.delete","title":"Beacon.delete — Beacon.delete","text":"Delete specific beacon QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beacon.delete — Beacon.delete","text":"","code":"Beacon.delete(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beacon.delete — Beacon.delete","text":"id ID beacon. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.delete.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Beacon.delete — Beacon.delete","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.delete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beacon.delete — Beacon.delete","text":"","code":"if (FALSE) { # \\dontrun{ Beacon.delete(\"1234567890\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.query.html","id":null,"dir":"Reference","previous_headings":"","what":"Beacon.query — Beacon.query","title":"Beacon.query — Beacon.query","text":"Query individual beacon.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beacon.query — Beacon.query","text":"","code":"Beacon.query(id, query, entity_type, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beacon.query — Beacon.query","text":"id ID beacon. query entity ID query string. entity_type (optional) valid QuartzBio EDP entity type. env (optional) Custom client environment. ... (optional) Additional query parameters.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.query.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Beacon.query — Beacon.query","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beacon.query — Beacon.query","text":"","code":"if (FALSE) { # \\dontrun{ Beacon.query(   id = \"1234\",   query = \"BRCA2\",   entity_type = \"gene\" ) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.retrieve.html","id":null,"dir":"Reference","previous_headings":"","what":"Beacon.retrieve — Beacon.retrieve","title":"Beacon.retrieve — Beacon.retrieve","text":"Retrieves metadata specific beacon QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.retrieve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beacon.retrieve — Beacon.retrieve","text":"","code":"Beacon.retrieve(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.retrieve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beacon.retrieve — Beacon.retrieve","text":"id ID beacon. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.retrieve.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Beacon.retrieve — Beacon.retrieve","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.retrieve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beacon.retrieve — Beacon.retrieve","text":"","code":"if (FALSE) { # \\dontrun{ Beacon.retrieve(\"1234\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.update.html","id":null,"dir":"Reference","previous_headings":"","what":"Beacon.update — Beacon.update","title":"Beacon.update — Beacon.update","text":"Updates attributes existing beacon.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beacon.update — Beacon.update","text":"","code":"Beacon.update(id, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beacon.update — Beacon.update","text":"id ID beacon update. env (optional) Custom client environment. ... Beacon attributes change.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.update.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Beacon.update — Beacon.update","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Beacon.update.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Beacon.update — Beacon.update","text":"","code":"if (FALSE) { # \\dontrun{ Beacon.update(   id = \"1234\",   title = \"New Beacon Title\" ) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.all.html","id":null,"dir":"Reference","previous_headings":"","what":"BeaconSet.all — BeaconSet.all","title":"BeaconSet.all — BeaconSet.all","text":"Retrieves metadata beacon sets QuartzBio EDP accessible current user.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BeaconSet.all — BeaconSet.all","text":"","code":"BeaconSet.all(env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BeaconSet.all — BeaconSet.all","text":"env (optional) Custom client environment. ... (optional) Additional query parameters.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.all.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"BeaconSet.all — BeaconSet.all","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BeaconSet.all — BeaconSet.all","text":"","code":"if (FALSE) { # \\dontrun{ BeaconSet.all() } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.create.html","id":null,"dir":"Reference","previous_headings":"","what":"BeaconSet.create — BeaconSet.create","title":"BeaconSet.create — BeaconSet.create","text":"Create new beacon set.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BeaconSet.create — BeaconSet.create","text":"","code":"BeaconSet.create(   title,   description,   is_shared = FALSE,   env = get_connection(),   ... )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BeaconSet.create — BeaconSet.create","text":"title title displayed beacon set. description (optional) optional description new beacon set. is_shared TRUE, everyone else account able see query beacon set, able edit . (Default: FALSE) env (optional) Custom client environment. ... (optional) Additional beacon set attributes.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.create.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"BeaconSet.create — BeaconSet.create","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BeaconSet.create — BeaconSet.create","text":"","code":"if (FALSE) { # \\dontrun{ BeaconSet.create(   title = \"My new beacon set\", ) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.delete.html","id":null,"dir":"Reference","previous_headings":"","what":"BeaconSet.delete — BeaconSet.delete","title":"BeaconSet.delete — BeaconSet.delete","text":"Delete specific beacon set (including beacons) QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BeaconSet.delete — BeaconSet.delete","text":"","code":"BeaconSet.delete(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BeaconSet.delete — BeaconSet.delete","text":"id ID beacon set. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.delete.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"BeaconSet.delete — BeaconSet.delete","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.delete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BeaconSet.delete — BeaconSet.delete","text":"","code":"if (FALSE) { # \\dontrun{ BeaconSet.delete(\"1234\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.query.html","id":null,"dir":"Reference","previous_headings":"","what":"BeaconSet.query — BeaconSet.query","title":"BeaconSet.query — BeaconSet.query","text":"Query beacon set (.e. beacons within beacon set).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BeaconSet.query — BeaconSet.query","text":"","code":"BeaconSet.query(id, query, entity_type, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BeaconSet.query — BeaconSet.query","text":"id ID beacon set. query entity ID query string. entity_type (optional) valid QuartzBio EDP entity type. env (optional) Custom client environment. ... (optional) Additional query parameters.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.query.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"BeaconSet.query — BeaconSet.query","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BeaconSet.query — BeaconSet.query","text":"","code":"if (FALSE) { # \\dontrun{ BeaconSet.query(   id = \"1234\",   query = \"BRCA2\",   entity_type = \"gene\" ) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.retrieve.html","id":null,"dir":"Reference","previous_headings":"","what":"BeaconSet.retrieve — BeaconSet.retrieve","title":"BeaconSet.retrieve — BeaconSet.retrieve","text":"Retrieves metadata specific beacon set QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.retrieve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BeaconSet.retrieve — BeaconSet.retrieve","text":"","code":"BeaconSet.retrieve(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.retrieve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BeaconSet.retrieve — BeaconSet.retrieve","text":"id ID beacon set. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.retrieve.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"BeaconSet.retrieve — BeaconSet.retrieve","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.retrieve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BeaconSet.retrieve — BeaconSet.retrieve","text":"","code":"if (FALSE) { # \\dontrun{ BeaconSet.retrieve(\"1234\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.update.html","id":null,"dir":"Reference","previous_headings":"","what":"BeaconSet.update — BeaconSet.update","title":"BeaconSet.update — BeaconSet.update","text":"Updates attributes existing beacon set.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BeaconSet.update — BeaconSet.update","text":"","code":"BeaconSet.update(id, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BeaconSet.update — BeaconSet.update","text":"id ID beacon set update. env (optional) Custom client environment. ... Beacon set attributes change.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.update.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"BeaconSet.update — BeaconSet.update","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/BeaconSet.update.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BeaconSet.update — BeaconSet.update","text":"","code":"if (FALSE) { # \\dontrun{ BeaconSet.update(   id = \"1234\",   title = \"New Beacon Set Title\" ) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.activity.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset.activity — Dataset.activity","title":"Dataset.activity — Dataset.activity","text":"helper function get follow current activity dataset.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.activity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset.activity — Dataset.activity","text":"","code":"Dataset.activity(id, follow = TRUE, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.activity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset.activity — Dataset.activity","text":"id String ID QuartzBio EDP dataset follow Follow active tasks complete. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.activity.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dataset.activity — Dataset.activity","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.activity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataset.activity — Dataset.activity","text":"","code":"if (FALSE) { # \\dontrun{ Dataset.activity(\"1234567890\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.all.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves the metadata about datasets on QuartzBio EDP. — Dataset.all","title":"Retrieves the metadata about datasets on QuartzBio EDP. — Dataset.all","text":"Retrieves metadata datasets QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves the metadata about datasets on QuartzBio EDP. — Dataset.all","text":"","code":"Dataset.all(env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves the metadata about datasets on QuartzBio EDP. — Dataset.all","text":"env (optional) Custom client environment. ... (optional) Additional query parameters (e.g. page).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.all.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Retrieves the metadata about datasets on QuartzBio EDP. — Dataset.all","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves the metadata about datasets on QuartzBio EDP. — Dataset.all","text":"","code":"if (FALSE) { # \\dontrun{ Dataset.all() } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.count.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset.count — Dataset.count","title":"Dataset.count — Dataset.count","text":"Returns total number records given QuartzBio EDP dataset.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset.count — Dataset.count","text":"","code":"Dataset.count(id, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset.count — Dataset.count","text":"id ID QuartzBio EDP dataset, Dataset object. env (optional) Custom client environment. ... (optional) Additional query parameters (e.g. filters, limit, offset).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.count.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dataset.count — Dataset.count","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataset.count — Dataset.count","text":"","code":"if (FALSE) { # \\dontrun{ dataset <- Dataset.get_by_full_path(\"solvebio:public:/ClinVar/3.7.4-2017-01-30/Variants-GRCh37\") Dataset.count(dataset) Dataset.count(dataset, filters = '[[\"gene_symbol\", \"BRCA2\"]]') } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.create.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset.create — Dataset.create","title":"Dataset.create — Dataset.create","text":"Create empty QuartzBio EDP dataset.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset.create — Dataset.create","text":"","code":"Dataset.create(   vault_id,   vault_parent_object_id,   name,   env = get_connection(),   ... )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset.create — Dataset.create","text":"vault_id ID vault. vault_parent_object_id parent object (folder) ID vault. name name dataset parent folder. env (optional) Custom client environment. ... (optional) Additional dataset attributes.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.create.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dataset.create — Dataset.create","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataset.create — Dataset.create","text":"","code":"if (FALSE) { # \\dontrun{ Dataset.create(vault_id = vault$id, vault_parent_object_id = NULL, name = \"My Dataset\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.data.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset.data — Dataset.data","title":"Dataset.data — Dataset.data","text":"Returns one page documents QuartzBio EDP dataset processes response.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset.data — Dataset.data","text":"","code":"Dataset.data(id, filters, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset.data — Dataset.data","text":"id ID QuartzBio EDP dataset, Dataset object. filters (optional) Query filters. env (optional) Custom client environment. ... (optional) Additional query parameters (e.g. limit, offset).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dataset.data — Dataset.data","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataset.data — Dataset.data","text":"","code":"if (FALSE) { # \\dontrun{ Dataset.data(\"1234567890\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset.delete — Dataset.delete","title":"Dataset.delete — Dataset.delete","text":"Delete specific dataset QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset.delete — Dataset.delete","text":"","code":"Dataset.delete(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset.delete — Dataset.delete","text":"id String ID QuartzBio EDP dataset env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.delete.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dataset.delete — Dataset.delete","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.delete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataset.delete — Dataset.delete","text":"","code":"if (FALSE) { # \\dontrun{ Dataset.delete(\"1234567890\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.disable_global_beacon.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset.disable_global_beacon — Dataset.disable_global_beacon","title":"Dataset.disable_global_beacon — Dataset.disable_global_beacon","text":"Disables Global Beacon dataset.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.disable_global_beacon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset.disable_global_beacon — Dataset.disable_global_beacon","text":"","code":"Dataset.disable_global_beacon(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.disable_global_beacon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset.disable_global_beacon — Dataset.disable_global_beacon","text":"id ID QuartzBio EDP dataset. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.disable_global_beacon.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dataset.disable_global_beacon — Dataset.disable_global_beacon","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.disable_global_beacon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataset.disable_global_beacon — Dataset.disable_global_beacon","text":"","code":"if (FALSE) { # \\dontrun{ Dataset.disable_global_beacon(\"1234567890\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.enable_global_beacon.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset.enable_global_beacon — Dataset.enable_global_beacon","title":"Dataset.enable_global_beacon — Dataset.enable_global_beacon","text":"Enables Global Beacon dataset.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.enable_global_beacon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset.enable_global_beacon — Dataset.enable_global_beacon","text":"","code":"Dataset.enable_global_beacon(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.enable_global_beacon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset.enable_global_beacon — Dataset.enable_global_beacon","text":"id ID QuartzBio EDP dataset. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.enable_global_beacon.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dataset.enable_global_beacon — Dataset.enable_global_beacon","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.enable_global_beacon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataset.enable_global_beacon — Dataset.enable_global_beacon","text":"","code":"if (FALSE) { # \\dontrun{ Dataset.enable_global_beacon(\"1234567890\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.facets.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset.facets — Dataset.facets","title":"Dataset.facets — Dataset.facets","text":"Retrieves aggregated statistics term counts one fields QuartzBio EDP dataset. Returns list data frames, one requested facet.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.facets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset.facets — Dataset.facets","text":"","code":"Dataset.facets(id, facets, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.facets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset.facets — Dataset.facets","text":"id ID QuartzBio EDP dataset, Dataset object. facets list one field facets. env (optional) Custom client environment. ... (optional) Additional query parameters (e.g. filters, limit, offset).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.facets.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dataset.facets — Dataset.facets","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.facets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataset.facets — Dataset.facets","text":"","code":"if (FALSE) { # \\dontrun{ Dataset.facets(\"1234567890\", list(\"clinical_significance\", \"gene_symbol\")) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset.fields — Dataset.fields","title":"Dataset.fields — Dataset.fields","text":"Retrieves list fields field metadata dataset.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset.fields — Dataset.fields","text":"","code":"Dataset.fields(id, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset.fields — Dataset.fields","text":"id ID QuartzBio EDP dataset, Dataset object. env (optional) Custom client environment. ... (optional) Additional query parameters (e.g. limit, offset).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.fields.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dataset.fields — Dataset.fields","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.fields.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataset.fields — Dataset.fields","text":"","code":"if (FALSE) { # \\dontrun{ Dataset.fields(\"1234567890\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.get_by_full_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset.get_by_full_path — Dataset.get_by_full_path","title":"Dataset.get_by_full_path — Dataset.get_by_full_path","text":"helper function get dataset full path.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.get_by_full_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset.get_by_full_path — Dataset.get_by_full_path","text":"","code":"Dataset.get_by_full_path(full_path, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.get_by_full_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset.get_by_full_path — Dataset.get_by_full_path","text":"full_path valid full path dataset. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.get_by_full_path.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dataset.get_by_full_path — Dataset.get_by_full_path","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.get_by_full_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataset.get_by_full_path — Dataset.get_by_full_path","text":"","code":"if (FALSE) { # \\dontrun{ Dataset.get_by_full_path(\"solvebio:public:/ClinVar/3.7.4-2017-01-30/Variants-GRCh37\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.get_global_beacon_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset.get_global_beacon_status — Dataset.get_global_beacon_status","title":"Dataset.get_global_beacon_status — Dataset.get_global_beacon_status","text":"Retrieves global beacon status dataset.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.get_global_beacon_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset.get_global_beacon_status — Dataset.get_global_beacon_status","text":"","code":"Dataset.get_global_beacon_status(   id,   raise_on_disabled = FALSE,   env = get_connection() )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.get_global_beacon_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset.get_global_beacon_status — Dataset.get_global_beacon_status","text":"id ID QuartzBio EDP dataset. raise_on_disabled Whether raise exception Global Beacon disabled return NULL. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.get_global_beacon_status.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dataset.get_global_beacon_status — Dataset.get_global_beacon_status","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.get_global_beacon_status.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataset.get_global_beacon_status — Dataset.get_global_beacon_status","text":"","code":"if (FALSE) { # \\dontrun{ Dataset.get_global_beacon_status(\"1234567890\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.get_or_create_by_full_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset.get_or_create_by_full_path — Dataset.get_or_create_by_full_path","title":"Dataset.get_or_create_by_full_path — Dataset.get_or_create_by_full_path","text":"helper function get create dataset full path.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.get_or_create_by_full_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset.get_or_create_by_full_path — Dataset.get_or_create_by_full_path","text":"","code":"Dataset.get_or_create_by_full_path(full_path, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.get_or_create_by_full_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset.get_or_create_by_full_path — Dataset.get_or_create_by_full_path","text":"full_path valid full path dataset. env (optional) Custom client environment. ... Additional dataset creation parameters.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.get_or_create_by_full_path.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dataset.get_or_create_by_full_path — Dataset.get_or_create_by_full_path","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.get_or_create_by_full_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataset.get_or_create_by_full_path — Dataset.get_or_create_by_full_path","text":"","code":"if (FALSE) { # \\dontrun{ Dataset.get_or_create_by_full_path(\"MyVault:/folder/sub-folder/dataset\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"fetches a dataset. — Dataset","title":"fetches a dataset. — Dataset","text":"fetches dataset.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fetches a dataset. — Dataset","text":"","code":"Dataset(   dataset_id = NULL,   full_path = NULL,   path = NULL,   vault_id = NULL,   conn = get_connection() )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fetches a dataset. — Dataset","text":"dataset_id Dataset ID string full_path Object full path, including account, vault path. path path object, folders (e.g. \"/d1/d2/foo.csv\"). vault_id Vault ID string (e.g. \"19\"). conn EDP connection object (named list environment)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.query.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset.query — Dataset.query","title":"Dataset.query — Dataset.query","text":"Queries QuartzBio EDP dataset returns R data frame containing records. Returns single page results otherwise (default).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset.query — Dataset.query","text":"","code":"Dataset.query(   id,   paginate = FALSE,   use_field_titles = TRUE,   env = get_connection(),   ... )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset.query — Dataset.query","text":"id ID QuartzBio EDP dataset, Dataset object. paginate set TRUE, retrieves records (memory permitting). use_field_titles (optional) Use field title instead field name query. env (optional) Custom client environment. ... (optional) Additional query parameters (e.g. filters, limit, offset).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.query.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dataset.query — Dataset.query","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataset.query — Dataset.query","text":"","code":"if (FALSE) { # \\dontrun{ Dataset.query(\"12345678790\", paginate = TRUE) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.retrieve.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset.retrieve — Dataset.retrieve","title":"Dataset.retrieve — Dataset.retrieve","text":"Retrieves metadata specific dataset QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.retrieve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset.retrieve — Dataset.retrieve","text":"","code":"Dataset.retrieve(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.retrieve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset.retrieve — Dataset.retrieve","text":"id String ID QuartzBio EDP dataset env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.retrieve.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dataset.retrieve — Dataset.retrieve","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.retrieve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataset.retrieve — Dataset.retrieve","text":"","code":"if (FALSE) { # \\dontrun{ Dataset.retrieve(\"1234567890\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.template.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset.template — Dataset.template","title":"Dataset.template — Dataset.template","text":"Retrieves template dataset.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset.template — Dataset.template","text":"","code":"Dataset.template(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset.template — Dataset.template","text":"id String ID QuartzBio EDP dataset env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.template.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dataset.template — Dataset.template","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataset.template — Dataset.template","text":"","code":"if (FALSE) { # \\dontrun{ Dataset.template(\"1234567890\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.update.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset.update — Dataset.update","title":"Dataset.update — Dataset.update","text":"Updates attributes existing dataset.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset.update — Dataset.update","text":"","code":"Dataset.update(id, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset.update — Dataset.update","text":"id ID dataset update. env (optional) Custom client environment. ... Dataset attributes change.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.update.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dataset.update — Dataset.update","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset.update.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataset.update — Dataset.update","text":"","code":"if (FALSE) { # \\dontrun{ Dataset.update(   id = \"1234\",   name = \"New Dataset Name\", ) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetCommit.all.html","id":null,"dir":"Reference","previous_headings":"","what":"DatasetCommit.all — DatasetCommit.all","title":"DatasetCommit.all — DatasetCommit.all","text":"Retrieves metadata dataset commits QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetCommit.all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DatasetCommit.all — DatasetCommit.all","text":"","code":"DatasetCommit.all(env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetCommit.all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DatasetCommit.all — DatasetCommit.all","text":"env (optional) Custom client environment. ... (optional) Additional query parameters (e.g. page).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetCommit.all.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DatasetCommit.all — DatasetCommit.all","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetCommit.all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DatasetCommit.all — DatasetCommit.all","text":"","code":"if (FALSE) { # \\dontrun{ DatasetCommit.all() } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetCommit.delete.html","id":null,"dir":"Reference","previous_headings":"","what":"DatasetCommit.delete — DatasetCommit.delete","title":"DatasetCommit.delete — DatasetCommit.delete","text":"Deletes specific dataset commit QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetCommit.delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DatasetCommit.delete — DatasetCommit.delete","text":"","code":"DatasetCommit.delete(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetCommit.delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DatasetCommit.delete — DatasetCommit.delete","text":"id String ID full name QuartzBio EDP dataset commit. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetCommit.delete.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DatasetCommit.delete — DatasetCommit.delete","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetCommit.delete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DatasetCommit.delete — DatasetCommit.delete","text":"","code":"if (FALSE) { # \\dontrun{ DatasetCommit.delete(12345) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetCommit.retrieve.html","id":null,"dir":"Reference","previous_headings":"","what":"DatasetCommit.retrieve — DatasetCommit.retrieve","title":"DatasetCommit.retrieve — DatasetCommit.retrieve","text":"Retrieves metadata specific dataset commit QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetCommit.retrieve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DatasetCommit.retrieve — DatasetCommit.retrieve","text":"","code":"DatasetCommit.retrieve(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetCommit.retrieve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DatasetCommit.retrieve — DatasetCommit.retrieve","text":"id String ID QuartzBio EDP dataset commit. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetCommit.retrieve.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DatasetCommit.retrieve — DatasetCommit.retrieve","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetCommit.retrieve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DatasetCommit.retrieve — DatasetCommit.retrieve","text":"","code":"if (FALSE) { # \\dontrun{ DatasetCommit.retrieve(12345) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetExport.all.html","id":null,"dir":"Reference","previous_headings":"","what":"DatasetExport.all — DatasetExport.all","title":"DatasetExport.all — DatasetExport.all","text":"Retrieves metadata dataset exports QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetExport.all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DatasetExport.all — DatasetExport.all","text":"","code":"DatasetExport.all(env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetExport.all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DatasetExport.all — DatasetExport.all","text":"env (optional) Custom client environment. ... (optional) Additional query parameters (e.g. page).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetExport.all.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DatasetExport.all — DatasetExport.all","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetExport.all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DatasetExport.all — DatasetExport.all","text":"","code":"if (FALSE) { # \\dontrun{ DatasetExport.all() } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetExport.create.html","id":null,"dir":"Reference","previous_headings":"","what":"DatasetExport.create — DatasetExport.create","title":"DatasetExport.create — DatasetExport.create","text":"Create new dataset export.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetExport.create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DatasetExport.create — DatasetExport.create","text":"","code":"DatasetExport.create(   dataset_id,   format = \"json\",   params = list(),   follow = FALSE,   env = get_connection(),   ... )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetExport.create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DatasetExport.create — DatasetExport.create","text":"dataset_id target dataset ID. format (optional) export format (default: json). params (optional) Query parameters export. follow (default: FALSE) Follow export task completes. env (optional) Custom client environment. ... (optional) Additional dataset export parameters.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetExport.create.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DatasetExport.create — DatasetExport.create","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetExport.create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DatasetExport.create — DatasetExport.create","text":"","code":"if (FALSE) { # \\dontrun{ DatasetExport.create(   dataset_id = 12345,   format = \"json\",   params = list(fields = c(\"field_1\"), limit = 100) ) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetExport.delete.html","id":null,"dir":"Reference","previous_headings":"","what":"DatasetExport.delete — DatasetExport.delete","title":"DatasetExport.delete — DatasetExport.delete","text":"Deletes specific dataset export QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetExport.delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DatasetExport.delete — DatasetExport.delete","text":"","code":"DatasetExport.delete(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetExport.delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DatasetExport.delete — DatasetExport.delete","text":"id String ID QuartzBio EDP dataset export. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetExport.delete.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DatasetExport.delete — DatasetExport.delete","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetExport.delete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DatasetExport.delete — DatasetExport.delete","text":"","code":"if (FALSE) { # \\dontrun{ DatasetExport.delete(12345) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetExport.get_download_url.html","id":null,"dir":"Reference","previous_headings":"","what":"DatasetExport.get_download_url — DatasetExport.get_download_url","title":"DatasetExport.get_download_url — DatasetExport.get_download_url","text":"Helper method get download URL dataset export.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetExport.get_download_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DatasetExport.get_download_url — DatasetExport.get_download_url","text":"","code":"DatasetExport.get_download_url(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetExport.get_download_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DatasetExport.get_download_url — DatasetExport.get_download_url","text":"id ID dataset export. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetExport.get_download_url.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DatasetExport.get_download_url — DatasetExport.get_download_url","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetExport.get_download_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DatasetExport.get_download_url — DatasetExport.get_download_url","text":"","code":"if (FALSE) { # \\dontrun{ DatasetExport.get_download_url(\"1234567890\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetExport.retrieve.html","id":null,"dir":"Reference","previous_headings":"","what":"DatasetExport.retrieve — DatasetExport.retrieve","title":"DatasetExport.retrieve — DatasetExport.retrieve","text":"Retrieves metadata specific dataset export QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetExport.retrieve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DatasetExport.retrieve — DatasetExport.retrieve","text":"","code":"DatasetExport.retrieve(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetExport.retrieve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DatasetExport.retrieve — DatasetExport.retrieve","text":"id String ID QuartzBio EDP dataset export. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetExport.retrieve.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DatasetExport.retrieve — DatasetExport.retrieve","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetExport.retrieve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DatasetExport.retrieve — DatasetExport.retrieve","text":"","code":"if (FALSE) { # \\dontrun{ DatasetExport.retrieve(12345) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.all.html","id":null,"dir":"Reference","previous_headings":"","what":"DatasetField.all — DatasetField.all","title":"DatasetField.all — DatasetField.all","text":"Retrieves metadata dataset fields QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DatasetField.all — DatasetField.all","text":"","code":"DatasetField.all(env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DatasetField.all — DatasetField.all","text":"env (optional) Custom client environment. ... (optional) Additional query parameters (e.g. page).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.all.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DatasetField.all — DatasetField.all","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DatasetField.all — DatasetField.all","text":"","code":"if (FALSE) { # \\dontrun{ DatasetField.all() } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.create.html","id":null,"dir":"Reference","previous_headings":"","what":"DatasetField.create — DatasetField.create","title":"DatasetField.create — DatasetField.create","text":"Create new dataset field.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DatasetField.create — DatasetField.create","text":"","code":"DatasetField.create(   dataset_id,   name,   data_type = \"auto\",   env = get_connection(),   ... )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DatasetField.create — DatasetField.create","text":"dataset_id dataset ID. name name dataset field. data_type (optional) data type field (default: auto). env (optional) Custom client environment. ... (optional) Additional dataset import attributes.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.create.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DatasetField.create — DatasetField.create","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DatasetField.create — DatasetField.create","text":"","code":"if (FALSE) { # \\dontrun{ DatasetField.create(dataset_id = 12345, name = \"my_field\", title = \"My Field\", data_type = \"string\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.facets.html","id":null,"dir":"Reference","previous_headings":"","what":"DatasetField.facets — DatasetField.facets","title":"DatasetField.facets — DatasetField.facets","text":"Returns facets given dataset field.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.facets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DatasetField.facets — DatasetField.facets","text":"","code":"DatasetField.facets(id, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.facets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DatasetField.facets — DatasetField.facets","text":"id String ID dataset field. env (optional) Custom client environment. ... (optional) Additional query parameters.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.facets.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DatasetField.facets — DatasetField.facets","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.facets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DatasetField.facets — DatasetField.facets","text":"","code":"if (FALSE) { # \\dontrun{ DatasetField.facets(691) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.html","id":null,"dir":"Reference","previous_headings":"","what":"fetches a field metadata of a dataset by ID or (datasetid, field_name) — DatasetField","title":"fetches a field metadata of a dataset by ID or (datasetid, field_name) — DatasetField","text":"fetches field metadata dataset ID (datasetid, field_name)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fetches a field metadata of a dataset by ID or (datasetid, field_name) — DatasetField","text":"","code":"DatasetField(   field_id = NULL,   dataset_id = NULL,   name = NULL,   conn = get_connection() )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fetches a field metadata of a dataset by ID or (datasetid, field_name) — DatasetField","text":"field_id Field object ID. dataset_id Dataset ID string name name field conn EDP connection object (named list environment)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fetches a field metadata of a dataset by ID or (datasetid, field_name) — DatasetField","text":"DatasetField object","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.retrieve.html","id":null,"dir":"Reference","previous_headings":"","what":"DatasetField.retrieve — DatasetField.retrieve","title":"DatasetField.retrieve — DatasetField.retrieve","text":"Retrieves metadata specific dataset field.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.retrieve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DatasetField.retrieve — DatasetField.retrieve","text":"","code":"DatasetField.retrieve(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.retrieve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DatasetField.retrieve — DatasetField.retrieve","text":"id String ID dataset field. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.retrieve.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DatasetField.retrieve — DatasetField.retrieve","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.retrieve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DatasetField.retrieve — DatasetField.retrieve","text":"","code":"if (FALSE) { # \\dontrun{ DatasetField.retrieve(691) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.update.html","id":null,"dir":"Reference","previous_headings":"","what":"DatasetField.update — DatasetField.update","title":"DatasetField.update — DatasetField.update","text":"Updates attributes existing dataset field. NOTE: data_type field changed.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DatasetField.update — DatasetField.update","text":"","code":"DatasetField.update(id, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DatasetField.update — DatasetField.update","text":"id ID dataset field update. env (optional) Custom client environment. ... Dataset field attributes change.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.update.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DatasetField.update — DatasetField.update","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField.update.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DatasetField.update — DatasetField.update","text":"","code":"if (FALSE) { # \\dontrun{ DatasetField.update(   id = \"1234\",   title = \"New Field Title\" ) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField_create.html","id":null,"dir":"Reference","previous_headings":"","what":"creates a new Dataset Field. — DatasetField_create","title":"creates a new Dataset Field. — DatasetField_create","text":"creates new Dataset Field.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"creates a new Dataset Field. — DatasetField_create","text":"","code":"DatasetField_create(   dataset_id,   data_type,   name,   title = NULL,   description = NULL,   ordering = NULL,   entity_type = NULL,   expression = NULL,   is_hidden = NULL,   is_list = NULL,   url_template = NULL,   conn = get_connection() )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"creates a new Dataset Field. — DatasetField_create","text":"dataset_id Dataset ID string data_type data type. one : auto (default) boolean - Either True, False, null date - string ISO 8601 format, example: 2017-03-29T14:52:01 double - double-precision 64-bit IEEE 754 floating point. float - single-precision 32-bit IEEE 754 floating point. integer     signed 32-bit integer minimum value -231 maximum value 231-1. long     signed 64-bit integer minimum value -263 maximum value 263-1. object     key/value, JSON-like object, similar Python dictionary. string     valid UTF-8 string 32,766 characters length. text     valid UTF-8 string length, indexed full-text search. blob     valid UTF-8 string length, indexed search. name name field title field's display name, shown UI CSV/Excel exports, string description description string. ordering order column appears retrieving data dataset. Order 0-based. Default 0. entity_type valid entity type: dataset - Dataset ID (510110013133189334) gene - gene (EGFR) genomic_region - genomic region (GRCH38-7-55019017-55211628) literature - PubMed ID (19915526) sample - sample identifier (TCGA-02-0001) variant - genomic variant (GRCH38-7-55181378-55181378-T) expression EDP xpressions Python-like formulas can used pull data datasets, calculate statistics, run advanced algorithms. is_hidden whether field hidden UI. is_list whether result expected list. url_template URL template one \"value\" sections interpolated field value displayed link dataset table. conn EDP connection object (named list environment)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField_update.html","id":null,"dir":"Reference","previous_headings":"","what":"updates an existing Dataset Field. — DatasetField_update","title":"updates an existing Dataset Field. — DatasetField_update","text":"updates existing Dataset Field.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"updates an existing Dataset Field. — DatasetField_update","text":"","code":"DatasetField_update(   field_id,   data_type = NULL,   title = NULL,   description = NULL,   ordering = NULL,   entity_type = NULL,   expression = NULL,   is_hidden = NULL,   is_list = NULL,   url_template = NULL,   conn = get_connection() )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"updates an existing Dataset Field. — DatasetField_update","text":"field_id Field object ID. data_type data type. one : auto (default) boolean - Either True, False, null date - string ISO 8601 format, example: 2017-03-29T14:52:01 double - double-precision 64-bit IEEE 754 floating point. float - single-precision 32-bit IEEE 754 floating point. integer     signed 32-bit integer minimum value -231 maximum value 231-1. long     signed 64-bit integer minimum value -263 maximum value 263-1. object     key/value, JSON-like object, similar Python dictionary. string     valid UTF-8 string 32,766 characters length. text     valid UTF-8 string length, indexed full-text search. blob     valid UTF-8 string length, indexed search. title field's display name, shown UI CSV/Excel exports, string description description string. ordering list fields order/sort results , character vector. entity_type valid entity type: dataset - Dataset ID (510110013133189334) gene - gene (EGFR) genomic_region - genomic region (GRCH38-7-55019017-55211628) literature - PubMed ID (19915526) sample - sample identifier (TCGA-02-0001) variant - genomic variant (GRCH38-7-55181378-55181378-T) expression EDP xpressions Python-like formulas can used pull data datasets, calculate statistics, run advanced algorithms. is_hidden whether field hidden UI. is_list whether result expected list. url_template URL template one \"value\" sections interpolated field value displayed link dataset table. conn EDP connection object (named list environment)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetField_update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"updates an existing Dataset Field. — DatasetField_update","text":"DatasetField object","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetFields.html","id":null,"dir":"Reference","previous_headings":"","what":"fetches the fields of a dataset. — DatasetFields","title":"fetches the fields of a dataset. — DatasetFields","text":"fetches fields dataset.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetFields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fetches the fields of a dataset. — DatasetFields","text":"","code":"DatasetFields(   dataset_id,   limit = NULL,   page = NULL,   all = FALSE,   conn = get_connection(),   ... )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetFields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fetches the fields of a dataset. — DatasetFields","text":"dataset_id Dataset ID string limit maximum number elements fetch, integer. See also page. page number page fetch, integer. starts 1. See also limit. whether fetch data, iterating needed. conn EDP connection object (named list environment) ... Additional query parameters, passed .request().","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetFields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fetches the fields of a dataset. — DatasetFields","text":"DatasetFieldList object","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetFields.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"fetches the fields of a dataset. — DatasetFields","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetImport.all.html","id":null,"dir":"Reference","previous_headings":"","what":"DatasetImport.all — DatasetImport.all","title":"DatasetImport.all — DatasetImport.all","text":"Retrieves metadata dataset imports QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetImport.all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DatasetImport.all — DatasetImport.all","text":"","code":"DatasetImport.all(env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetImport.all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DatasetImport.all — DatasetImport.all","text":"env (optional) Custom client environment. ... (optional) Additional query parameters (e.g. page).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetImport.all.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DatasetImport.all — DatasetImport.all","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetImport.all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DatasetImport.all — DatasetImport.all","text":"","code":"if (FALSE) { # \\dontrun{ DatasetImport.all() } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetImport.create.html","id":null,"dir":"Reference","previous_headings":"","what":"DatasetImport.create — DatasetImport.create","title":"DatasetImport.create — DatasetImport.create","text":"Create new dataset import. Either object_id, manifest, data_records required.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetImport.create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DatasetImport.create — DatasetImport.create","text":"","code":"DatasetImport.create(   dataset_id,   commit_mode = \"append\",   env = get_connection(),   ... )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetImport.create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DatasetImport.create — DatasetImport.create","text":"dataset_id target dataset ID. commit_mode (optional) commit mode (default: append). env (optional) Custom client environment. ... (optional) Additional dataset import attributes.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetImport.create.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DatasetImport.create — DatasetImport.create","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetImport.create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DatasetImport.create — DatasetImport.create","text":"","code":"if (FALSE) { # \\dontrun{ DatasetImport.create(dataset_id = 12345, upload_id = 12345) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetImport.delete.html","id":null,"dir":"Reference","previous_headings":"","what":"DatasetImport.delete — DatasetImport.delete","title":"DatasetImport.delete — DatasetImport.delete","text":"Deletes specific dataset import QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetImport.delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DatasetImport.delete — DatasetImport.delete","text":"","code":"DatasetImport.delete(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetImport.delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DatasetImport.delete — DatasetImport.delete","text":"id String ID QuartzBio EDP dataset import. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetImport.delete.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DatasetImport.delete — DatasetImport.delete","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetImport.delete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DatasetImport.delete — DatasetImport.delete","text":"","code":"if (FALSE) { # \\dontrun{ DatasetImport.delete(12345) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetImport.retrieve.html","id":null,"dir":"Reference","previous_headings":"","what":"DatasetImport.retrieve — DatasetImport.retrieve","title":"DatasetImport.retrieve — DatasetImport.retrieve","text":"Retrieves metadata specific dataset import QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetImport.retrieve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DatasetImport.retrieve — DatasetImport.retrieve","text":"","code":"DatasetImport.retrieve(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetImport.retrieve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DatasetImport.retrieve — DatasetImport.retrieve","text":"id String ID QuartzBio EDP dataset import. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetImport.retrieve.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DatasetImport.retrieve — DatasetImport.retrieve","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetImport.retrieve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DatasetImport.retrieve — DatasetImport.retrieve","text":"","code":"if (FALSE) { # \\dontrun{ DatasetImport.retrieve(12345) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetMigration.all.html","id":null,"dir":"Reference","previous_headings":"","what":"DatasetMigration.all — DatasetMigration.all","title":"DatasetMigration.all — DatasetMigration.all","text":"Retrieves metadata dataset migrations QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetMigration.all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DatasetMigration.all — DatasetMigration.all","text":"","code":"DatasetMigration.all(env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetMigration.all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DatasetMigration.all — DatasetMigration.all","text":"env (optional) Custom client environment. ... (optional) Additional query parameters (e.g. page).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetMigration.all.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DatasetMigration.all — DatasetMigration.all","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetMigration.all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DatasetMigration.all — DatasetMigration.all","text":"","code":"if (FALSE) { # \\dontrun{ DatasetMigration.all() } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetMigration.create.html","id":null,"dir":"Reference","previous_headings":"","what":"DatasetMigration.create — DatasetMigration.create","title":"DatasetMigration.create — DatasetMigration.create","text":"Create new dataset migration.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetMigration.create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DatasetMigration.create — DatasetMigration.create","text":"","code":"DatasetMigration.create(   source_id,   target_id,   commit_mode = \"append\",   source_params = NULL,   target_fields = NULL,   include_errors = FALSE,   env = get_connection(),   ... )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetMigration.create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DatasetMigration.create — DatasetMigration.create","text":"source_id source dataset ID. target_id target dataset ID. commit_mode (optional) commit mode (default: append). source_params (optional) query parameters used source dataset. target_fields (optional) list valid dataset fields add override target dataset. include_errors (optional) TRUE, new field (_errors) added record containing expression evaluation errors (default: FALSE). env (optional) Custom client environment. ... (optional) Additional dataset migration attributes.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetMigration.create.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DatasetMigration.create — DatasetMigration.create","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetMigration.create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DatasetMigration.create — DatasetMigration.create","text":"","code":"if (FALSE) { # \\dontrun{ DatasetMigration.create(dataset_id = 12345, upload_id = 12345) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetMigration.delete.html","id":null,"dir":"Reference","previous_headings":"","what":"DatasetMigration.delete — DatasetMigration.delete","title":"DatasetMigration.delete — DatasetMigration.delete","text":"Deletes specific dataset migration QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetMigration.delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DatasetMigration.delete — DatasetMigration.delete","text":"","code":"DatasetMigration.delete(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetMigration.delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DatasetMigration.delete — DatasetMigration.delete","text":"id String ID QuartzBio EDP dataset migration. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetMigration.delete.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DatasetMigration.delete — DatasetMigration.delete","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetMigration.delete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DatasetMigration.delete — DatasetMigration.delete","text":"","code":"if (FALSE) { # \\dontrun{ DatasetMigration.delete(12345) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetMigration.retrieve.html","id":null,"dir":"Reference","previous_headings":"","what":"DatasetMigration.retrieve — DatasetMigration.retrieve","title":"DatasetMigration.retrieve — DatasetMigration.retrieve","text":"Retrieves metadata specific dataset migration QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetMigration.retrieve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DatasetMigration.retrieve — DatasetMigration.retrieve","text":"","code":"DatasetMigration.retrieve(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetMigration.retrieve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DatasetMigration.retrieve — DatasetMigration.retrieve","text":"id String ID QuartzBio EDP dataset migration. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetMigration.retrieve.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DatasetMigration.retrieve — DatasetMigration.retrieve","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetMigration.retrieve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DatasetMigration.retrieve — DatasetMigration.retrieve","text":"","code":"if (FALSE) { # \\dontrun{ DatasetMigration.retrieve(12345) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetTemplate.all.html","id":null,"dir":"Reference","previous_headings":"","what":"DatasetTemplate.all — DatasetTemplate.all","title":"DatasetTemplate.all — DatasetTemplate.all","text":"Retrieves metadata dataset templates QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetTemplate.all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DatasetTemplate.all — DatasetTemplate.all","text":"","code":"DatasetTemplate.all(env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetTemplate.all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DatasetTemplate.all — DatasetTemplate.all","text":"env (optional) Custom client environment. ... (optional) Additional query parameters (e.g. page).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetTemplate.all.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DatasetTemplate.all — DatasetTemplate.all","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetTemplate.all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DatasetTemplate.all — DatasetTemplate.all","text":"","code":"if (FALSE) { # \\dontrun{ DatasetTemplate.all() } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetTemplate.create.html","id":null,"dir":"Reference","previous_headings":"","what":"DatasetTemplate.create — DatasetTemplate.create","title":"DatasetTemplate.create — DatasetTemplate.create","text":"Create QuartzBio EDP dataset template.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetTemplate.create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DatasetTemplate.create — DatasetTemplate.create","text":"","code":"DatasetTemplate.create(env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetTemplate.create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DatasetTemplate.create — DatasetTemplate.create","text":"env (optional) Custom client environment. ... (optional) Dataset template attributes.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetTemplate.create.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DatasetTemplate.create — DatasetTemplate.create","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetTemplate.create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DatasetTemplate.create — DatasetTemplate.create","text":"","code":"if (FALSE) { # \\dontrun{ DatasetTemplate.create(name = \"My Dataset Template\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetTemplate.delete.html","id":null,"dir":"Reference","previous_headings":"","what":"DatasetTemplate.delete — DatasetTemplate.delete","title":"DatasetTemplate.delete — DatasetTemplate.delete","text":"Deletes specific dataset template QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetTemplate.delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DatasetTemplate.delete — DatasetTemplate.delete","text":"","code":"DatasetTemplate.delete(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetTemplate.delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DatasetTemplate.delete — DatasetTemplate.delete","text":"id String ID full name QuartzBio EDP dataset template. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetTemplate.delete.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DatasetTemplate.delete — DatasetTemplate.delete","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetTemplate.delete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DatasetTemplate.delete — DatasetTemplate.delete","text":"","code":"if (FALSE) { # \\dontrun{ DatasetTemplate.delete(12345) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetTemplate.retrieve.html","id":null,"dir":"Reference","previous_headings":"","what":"DatasetTemplate.retrieve — DatasetTemplate.retrieve","title":"DatasetTemplate.retrieve — DatasetTemplate.retrieve","text":"Retrieves metadata specific dataset template QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetTemplate.retrieve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DatasetTemplate.retrieve — DatasetTemplate.retrieve","text":"","code":"DatasetTemplate.retrieve(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetTemplate.retrieve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DatasetTemplate.retrieve — DatasetTemplate.retrieve","text":"id String ID QuartzBio EDP dataset template. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetTemplate.retrieve.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DatasetTemplate.retrieve — DatasetTemplate.retrieve","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetTemplate.retrieve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DatasetTemplate.retrieve — DatasetTemplate.retrieve","text":"","code":"if (FALSE) { # \\dontrun{ DatasetTemplate.retrieve(12345) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetTemplate.update.html","id":null,"dir":"Reference","previous_headings":"","what":"DatasetTemplate.update — DatasetTemplate.update","title":"DatasetTemplate.update — DatasetTemplate.update","text":"Updates attributes existing dataset template.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetTemplate.update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DatasetTemplate.update — DatasetTemplate.update","text":"","code":"DatasetTemplate.update(id, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetTemplate.update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DatasetTemplate.update — DatasetTemplate.update","text":"id ID dataset template update. env (optional) Custom client environment. ... Dataset template attributes change.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetTemplate.update.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DatasetTemplate.update — DatasetTemplate.update","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/DatasetTemplate.update.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DatasetTemplate.update — DatasetTemplate.update","text":"","code":"if (FALSE) { # \\dontrun{ DatasetTemplate.update(   id = \"1234\",   name = \"New Template Name\", ) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset_create.html","id":null,"dir":"Reference","previous_headings":"","what":"creates a new Dataset. — Dataset_create","title":"creates a new Dataset. — Dataset_create","text":"creates new Dataset.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"creates a new Dataset. — Dataset_create","text":"","code":"Dataset_create(   vault_id,   vault_path,   description = NULL,   metadata = NULL,   tags = NULL,   storage_class = NULL,   capacity = NULL,   conn = get_connection() )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"creates a new Dataset. — Dataset_create","text":"vault_id Vault ID string (e.g. \"19\"). vault_path Vault path, string (e.g. \"/d1/d2/foo.csv\") description description string. metadata metadata named list. tags list tags character vector. storage_class Storage class vault ('Standard', 'Standard-IA', 'Essential', 'Temporary', 'Performance', 'Archive') string. capacity dataset capacity level (small, medium, large). conn EDP connection object (named list environment)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset_create.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"creates a new Dataset. — Dataset_create","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset_import.html","id":null,"dir":"Reference","previous_headings":"","what":"imports data into an existing dataset — Dataset_import","title":"imports data into an existing dataset — Dataset_import","text":"imports data existing dataset","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset_import.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"imports data into an existing dataset — Dataset_import","text":"","code":"Dataset_import(   dataset_id,   commit_mode = NULL,   records = NULL,   df = NULL,   file_id = NULL,   target_fields = infer_fields_from_df(df),   sync = FALSE,   conn = get_connection(),   ... )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset_import.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"imports data into an existing dataset — Dataset_import","text":"dataset_id Dataset ID string commit_mode four commit modes can selected depending scenario: append (default), overwrite, upsert, delete. records data annotate data frame. df data import data.frame file_id file Object ID. target_fields list valid dataset fields create override import, character vector. sync whether proceed synchronous mode, .e wait sub tasks finish returning. conn EDP connection object (named list environment) ... passed Task_wait_for_completion()","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset_query.html","id":null,"dir":"Reference","previous_headings":"","what":"queries data into a dataset. — Dataset_query","title":"queries data into a dataset. — Dataset_query","text":"queries data dataset.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"queries data into a dataset. — Dataset_query","text":"","code":"Dataset_query(   dataset_id,   filters = NULL,   facets = NULL,   fields = NULL,   exclude_fields = c(\"_id\", \"_commit\"),   ordering = NULL,   query = NULL,   limit = 10000,   offset = NULL,   all = FALSE,   meta = TRUE,   parallel = FALSE,   workers = 4,   conn = get_connection(),   ... )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Dataset_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"queries data into a dataset. — Dataset_query","text":"dataset_id Dataset ID string filters filter expression JSON string. facets valid facets objects. fields fields add. exclude_fields list fields exclude results, character vector. ordering list fields order/sort results , character vector. query string matches objects whose path contains string. limit maximum number elements fetch, integer. See also page. offset file offset (starts 0). whether fetch data, iterating needed. meta whether retrieve fields meta data information properly format, reorder rename data frame parallel whether parallelize API calls. workers parallel mode, number concurrent requests make conn EDP connection object (named list environment) ... Additional query parameters, passed .request().","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"fetches a list of datasets. — Datasets","title":"fetches a list of datasets. — Datasets","text":"fetches list datasets.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fetches a list of datasets. — Datasets","text":"","code":"Datasets(   vault_id = NULL,   vault_name = NULL,   vault_full_path = NULL,   filename = NULL,   path = NULL,   object_type = NULL,   depth = NULL,   query = NULL,   regex = NULL,   glob = NULL,   ancestor_id = NULL,   min_distance = NULL,   tag = NULL,   storage_class = NULL,   limit = NULL,   page = NULL,   conn = get_connection() )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Datasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fetches a list of datasets. — Datasets","text":"vault_id Vault ID string (e.g. \"19\"). vault_name Vault name string (e.g. \"Public\"). vault_full_path Vault full path, string (e.g. \"quartzbio:Public\") filename Object filename, without parent folder (e.g. \"foo.csv\") path path object, folders (e.g. \"/d1/d2/foo.csv\"). object_type type object, one  \"file\", \"folder\", \"dataset\". depth depth object Vault integer (0 means root) query string matches objects whose path contains string. regex regular expression, string, filter results . glob glob (full path wildcard characters) searches objects matching paths (case-insensitive). ancestor_id object ID ancestor, filtering. min_distance used conjuction ancestor_id filter include objects minimum distance ancestor. tag single tag string. storage_class Storage class vault ('Standard', 'Standard-IA', 'Essential', 'Temporary', 'Performance', 'Archive') string. limit maximum number elements fetch, integer. See also page. page number page fetch, integer. starts 1. See also limit. conn EDP connection object (named list environment)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Expression.evaluate.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate a QuartzBio EDP expression. — Expression.evaluate","title":"Evaluate a QuartzBio EDP expression. — Expression.evaluate","text":"Evaluate QuartzBio EDP expression.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Expression.evaluate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate a QuartzBio EDP expression. — Expression.evaluate","text":"","code":"Expression.evaluate(   expression,   data_type = \"string\",   is_list = FALSE,   data = NULL,   raw = FALSE,   env = get_connection() )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Expression.evaluate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate a QuartzBio EDP expression. — Expression.evaluate","text":"expression EDP expression string. data_type data type cast expression result. is_list whether result expected list. data TODO raw whether return raw response. env Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Expression.evaluate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate a QuartzBio EDP expression. — Expression.evaluate","text":"","code":"if (FALSE) { # \\dontrun{ Expression.evaluate(\"1 + 1\", data_type = \"integer\", is_list = FALSE) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/File.html","id":null,"dir":"Reference","previous_headings":"","what":"fetches a file by id, full_path or (vault_id, path) — File","title":"fetches a file by id, full_path or (vault_id, path) — File","text":"fetches file id, full_path (vault_id, path)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/File.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fetches a file by id, full_path or (vault_id, path) — File","text":"","code":"File(   id = NULL,   full_path = NULL,   path = NULL,   vault_id = NULL,   conn = get_connection() )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/File.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fetches a file by id, full_path or (vault_id, path) — File","text":"id File ID full_path Object full path, including account, vault path. path path object, folders (e.g. \"/d1/d2/foo.csv\"). vault_id Vault ID string (e.g. \"19\"). conn EDP connection object (named list environment)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/File.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fetches a file by id, full_path or (vault_id, path) — File","text":"file info Object","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/File_download.html","id":null,"dir":"Reference","previous_headings":"","what":"utility function that downloads an EDP File into a local file — File_download","title":"utility function that downloads an EDP File into a local file — File_download","text":"utility function downloads EDP File local file","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/File_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"utility function that downloads an EDP File into a local file — File_download","text":"","code":"File_download(file_id, local_path, conn = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/File_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"utility function that downloads an EDP File into a local file — File_download","text":"file_id file Object ID. local_path path local file. conn EDP connection object (named list environment) ... passed File_download_content()","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/File_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"utility function that downloads an EDP File into a local file — File_download","text":"response","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/File_get_download_url.html","id":null,"dir":"Reference","previous_headings":"","what":"fetches the download URL of a file. — File_get_download_url","title":"fetches the download URL of a file. — File_get_download_url","text":"URL can used download file using HTTP client, utils::download.file()","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/File_get_download_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fetches the download URL of a file. — File_get_download_url","text":"","code":"File_get_download_url(file_id, conn = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/File_get_download_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fetches the download URL of a file. — File_get_download_url","text":"file_id file Object ID. conn EDP connection object (named list environment)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/File_get_download_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fetches the download URL of a file. — File_get_download_url","text":"download URL string","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/File_query.html","id":null,"dir":"Reference","previous_headings":"","what":"queries the content of a file. — File_query","title":"queries the content of a file. — File_query","text":"file parsable EDP. Otherwise can use File_download()","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/File_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"queries the content of a file. — File_query","text":"","code":"File_query(   id,   filters = NULL,   limit = 10000,   offset = NULL,   all = FALSE,   conn = get_connection() )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/File_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"queries the content of a file. — File_query","text":"id File ID filters filter expression JSON string. limit maximum number elements fetch, integer. See also page. offset file offset (starts 0). whether fetch data, iterating needed. conn EDP connection object (named list environment)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/File_read.html","id":null,"dir":"Reference","previous_headings":"","what":"convenience function to download a file into memory, just a wrapper over File_download() — File_read","title":"convenience function to download a file into memory, just a wrapper over File_download() — File_read","text":"convenience function download file memory, just wrapper File_download()","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/File_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convenience function to download a file into memory, just a wrapper over File_download() — File_read","text":"","code":"File_read(file_id, local_path = tempfile(), conn = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/File_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convenience function to download a file into memory, just a wrapper over File_download() — File_read","text":"file_id file Object ID. local_path download file. Used testing purposes. conn EDP connection object (named list environment) ... passed File_download()","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/File_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convenience function to download a file into memory, just a wrapper over File_download() — File_read","text":"file content","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/File_upload.html","id":null,"dir":"Reference","previous_headings":"","what":"uploads a file — File_upload","title":"uploads a file — File_upload","text":"uploads file","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/File_upload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"uploads a file — File_upload","text":"","code":"File_upload(   vault_id,   local_path,   vault_path,   mimetype = mime::guess_type(local_path),   conn = get_connection() )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/File_upload.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"uploads a file — File_upload","text":"vault_id Vault ID string (e.g. \"19\"). local_path path local file. vault_path Vault path, string (e.g. \"/d1/d2/foo.csv\") mimetype MIME type Object. conn EDP connection object (named list environment)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Files.html","id":null,"dir":"Reference","previous_headings":"","what":"fetches a list of files. — Files","title":"fetches a list of files. — Files","text":"fetches list files.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fetches a list of files. — Files","text":"","code":"Files(...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fetches a list of files. — Files","text":"... Arguments passed Objects ancestor_id object ID ancestor, filtering. conn EDP connection object (named list environment) depth depth object Vault integer (0 means root) filename Object filename, without parent folder (e.g. \"foo.csv\") glob glob (full path wildcard characters) searches objects matching paths (case-insensitive). limit maximum number elements fetch, integer. See also page. min_distance used conjuction ancestor_id filter include objects minimum distance ancestor. object_type type object, one  \"file\", \"folder\", \"dataset\". page number page fetch, integer. starts 1. See also limit. path path object, folders (e.g. \"/d1/d2/foo.csv\"). query string matches objects whose path contains string. regex regular expression, string, filter results . storage_class Storage class vault ('Standard', 'Standard-IA', 'Essential', 'Temporary', 'Performance', 'Archive') string. tag single tag string. vault_id Vault ID string (e.g. \"19\"). vault_name Vault name string (e.g. \"Public\"). vault_full_path Vault full path, string (e.g. \"quartzbio:Public\")","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Folder.html","id":null,"dir":"Reference","previous_headings":"","what":"fetches a folder by id, full_path or (vault_id, path) — Folder","title":"fetches a folder by id, full_path or (vault_id, path) — Folder","text":"fetches folder id, full_path (vault_id, path)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Folder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fetches a folder by id, full_path or (vault_id, path) — Folder","text":"","code":"Folder(   id = NULL,   full_path = NULL,   path = NULL,   vault_id = NULL,   conn = get_connection() )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Folder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fetches a folder by id, full_path or (vault_id, path) — Folder","text":"id folder ID. full_path Object full path, including account, vault path. path path object, folders (e.g. \"/d1/d2/foo.csv\"). vault_id Vault ID string (e.g. \"19\"). conn EDP connection object (named list environment)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Folder_create.html","id":null,"dir":"Reference","previous_headings":"","what":"creates a folder. — Folder_create","title":"creates a folder. — Folder_create","text":"creates  folder.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Folder_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"creates a folder. — Folder_create","text":"","code":"Folder_create(   vault_id,   path,   recursive = TRUE,   parent_folder_id = NULL,   conn = get_connection() )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Folder_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"creates a folder. — Folder_create","text":"vault_id Vault ID string (e.g. \"19\"). path folder path create recursive whether recursively create parent folders exist. parent_folder_id ID parent folder. conn EDP connection object (named list environment)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Folder_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"creates a folder. — Folder_create","text":"folder Object","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Folders.html","id":null,"dir":"Reference","previous_headings":"","what":"fetches a list of folders. — Folders","title":"fetches a list of folders. — Folders","text":"fetches list folders.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Folders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fetches a list of folders. — Folders","text":"","code":"Folders(...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Folders.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fetches a list of folders. — Folders","text":"... Arguments passed Objects ancestor_id object ID ancestor, filtering. conn EDP connection object (named list environment) depth depth object Vault integer (0 means root) filename Object filename, without parent folder (e.g. \"foo.csv\") glob glob (full path wildcard characters) searches objects matching paths (case-insensitive). limit maximum number elements fetch, integer. See also page. min_distance used conjuction ancestor_id filter include objects minimum distance ancestor. object_type type object, one  \"file\", \"folder\", \"dataset\". page number page fetch, integer. starts 1. See also limit. path path object, folders (e.g. \"/d1/d2/foo.csv\"). query string matches objects whose path contains string. regex regular expression, string, filter results . storage_class Storage class vault ('Standard', 'Standard-IA', 'Essential', 'Temporary', 'Performance', 'Archive') string. tag single tag string. vault_id Vault ID string (e.g. \"19\"). vault_name Vault name string (e.g. \"Public\"). vault_full_path Vault full path, string (e.g. \"quartzbio:Public\")","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Folders.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fetches a list of folders. — Folders","text":"folders ObjectList","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/GlobalSearch.facets.html","id":null,"dir":"Reference","previous_headings":"","what":"GlobalSearch.facets — GlobalSearch.facets","title":"GlobalSearch.facets — GlobalSearch.facets","text":"Performs Global Search based provided filters, entities, queries, returns R data frame containing facets results API response.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/GlobalSearch.facets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GlobalSearch.facets — GlobalSearch.facets","text":"","code":"GlobalSearch.facets(facets, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/GlobalSearch.facets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GlobalSearch.facets — GlobalSearch.facets","text":"facets Facets list. env (optional) Custom client environment. ... (optional) Additional query parameters (e.g. filters, entities, query).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/GlobalSearch.facets.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GlobalSearch.facets — GlobalSearch.facets","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/GlobalSearch.facets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GlobalSearch.facets — GlobalSearch.facets","text":"","code":"if (FALSE) { # \\dontrun{ GlobalSearch.facets(facets = \"study\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/GlobalSearch.request.html","id":null,"dir":"Reference","previous_headings":"","what":"GlobalSearch.request — GlobalSearch.request","title":"GlobalSearch.request — GlobalSearch.request","text":"Performs single Global Search API request provided filters, queries entities. single request retrieve one page results (based limit parameter). Use GlobalSearch.search() retrieve pages results. Returns full API response (containing attributes: results, vaults, subjects, subjects_count, total)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/GlobalSearch.request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GlobalSearch.request — GlobalSearch.request","text":"","code":"GlobalSearch.request(   query = NULL,   filters,   entities,   env = get_connection(),   ... )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/GlobalSearch.request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GlobalSearch.request — GlobalSearch.request","text":"query (optional) Advanced search query. filters (optional) Low-level filter specification. entities (optional) Low-level entity specification. env (optional) Custom client environment. ... (optional) Additional query parameters (e.g. limit, offset).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/GlobalSearch.request.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GlobalSearch.request — GlobalSearch.request","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/GlobalSearch.request.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GlobalSearch.request — GlobalSearch.request","text":"","code":"if (FALSE) { # \\dontrun{ # No filters are applied GlobalSearch.request()  # Global Beacon search GlobalSearch.request(entities = '[[\"gene\",\"BRCA2\"]]')  # Type filter (only vaults) GlobalSearch.request(filters = '[{\"and\":[[\"type__in\",[\"vault\"]]]}]')  # Advanced search GlobalSearch.request(query = \"fuji\")   # Multiple filters and entities GlobalSearch.request(   entities = '[[\"gene\",\"BRCA2\"]]',   filters = '[{                \"and\": [                       {\"and\": [                          [\"created_at__range\",[\"2021-11-28\",\"2021-12-28\"]]]},                          [\"type__in\",[\"dataset\"]]                      ]              }]' ) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/GlobalSearch.search.html","id":null,"dir":"Reference","previous_headings":"","what":"GlobalSearch.search — GlobalSearch.search","title":"GlobalSearch.search — GlobalSearch.search","text":"Performs Global Search based provided filters, entities, queries, returns R data frame containing results API response. Returns single page results otherwise (default).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/GlobalSearch.search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GlobalSearch.search — GlobalSearch.search","text":"","code":"GlobalSearch.search(paginate = FALSE, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/GlobalSearch.search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GlobalSearch.search — GlobalSearch.search","text":"paginate set TRUE, retrieves records (memory permitting). env (optional) Custom client environment. ... (optional) Additional query parameters (e.g. filters, entities, query, limit, offset).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/GlobalSearch.search.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GlobalSearch.search — GlobalSearch.search","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/GlobalSearch.search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GlobalSearch.search — GlobalSearch.search","text":"","code":"if (FALSE) { # \\dontrun{ # No filters applied GlobalSearch.search()  # Global Beacon search GlobalSearch.search(entities = '[[\"gene\",\"BRCA2\"]]')  # #Type filter (only vaults) GlobalSearch.search(filters = '[{\"and\":[[\"type__in\",[\"vault\"]]]}]')  # Advanced search GlobalSearch.search(query = \"fuji\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/GlobalSearch.subjects.html","id":null,"dir":"Reference","previous_headings":"","what":"GlobalSearch.subjects — GlobalSearch.subjects","title":"GlobalSearch.subjects — GlobalSearch.subjects","text":"Performs Global Search based provided filters, entities, queries, returns R data frame containing subjects API response.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/GlobalSearch.subjects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GlobalSearch.subjects — GlobalSearch.subjects","text":"","code":"GlobalSearch.subjects(env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/GlobalSearch.subjects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GlobalSearch.subjects — GlobalSearch.subjects","text":"env (optional) Custom client environment. ... (optional) Additional query parameters (e.g. filters, entities, query, limit, offset).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/GlobalSearch.subjects.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GlobalSearch.subjects — GlobalSearch.subjects","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/GlobalSearch.subjects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GlobalSearch.subjects — GlobalSearch.subjects","text":"","code":"if (FALSE) { # \\dontrun{ GlobalSearch.subjects(entities = '[[\"gene\",\"BRCA2\"]]') } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/GlobalSearch.subjects_count.html","id":null,"dir":"Reference","previous_headings":"","what":"GlobalSearch.subjects_count — GlobalSearch.subjects_count","title":"GlobalSearch.subjects_count — GlobalSearch.subjects_count","text":"Performs Global Search based provided filters, entities, queries, returns total number subjects API response.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/GlobalSearch.subjects_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GlobalSearch.subjects_count — GlobalSearch.subjects_count","text":"","code":"GlobalSearch.subjects_count(env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/GlobalSearch.subjects_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GlobalSearch.subjects_count — GlobalSearch.subjects_count","text":"env (optional) Custom client environment. ... (optional) Additional query parameters (e.g. filters, entities, query, limit, offset).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/GlobalSearch.subjects_count.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"GlobalSearch.subjects_count — GlobalSearch.subjects_count","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/GlobalSearch.subjects_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GlobalSearch.subjects_count — GlobalSearch.subjects_count","text":"","code":"if (FALSE) { # \\dontrun{ GlobalSearch.subjects_count(entities = '[[\"gene\",\"BRCA2\"]]') } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.all.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves the metadata about all objects on EDP accessible to the current user. — Object.all","title":"Retrieves the metadata about all objects on EDP accessible to the current user. — Object.all","text":"Retrieves metadata objects EDP accessible current user.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves the metadata about all objects on EDP accessible to the current user. — Object.all","text":"","code":"Object.all(env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves the metadata about all objects on EDP accessible to the current user. — Object.all","text":"env Custom client environment. ... Additional query parameters, passed .request().","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.create.html","id":null,"dir":"Reference","previous_headings":"","what":"Object.create — Object.create","title":"Object.create — Object.create","text":"Create QuartzBio EDP object.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object.create — Object.create","text":"","code":"Object.create(   vault_id,   parent_object_id,   object_type,   filename,   env = get_connection(),   ... )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object.create — Object.create","text":"vault_id target vault ID. parent_object_id ID parent object (folder) NULL vault root. object_type type object (.e. \"folder\"). filename filename (.e. name) object. env (optional) Custom client environment. ... (optional) Additional object attributes.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.create.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Object.create — Object.create","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Object.create — Object.create","text":"","code":"if (FALSE) { # \\dontrun{ Object.create(   vault_id = \"1234567890\",   parent_object_id = NULL,   object_type = \"folder\",   filename = \"My Folder\" ) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.data.html","id":null,"dir":"Reference","previous_headings":"","what":"Object.data — Object.data","title":"Object.data — Object.data","text":"Returns one page documents QuartzBio EDP file (object) processes response.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object.data — Object.data","text":"","code":"Object.data(id, filters, col.names = NULL, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object.data — Object.data","text":"id ID QuartzBio EDP file (vault object). filters (optional) Query filters. col.names (optional) Force data frame column name ordering. env (optional) Custom client environment. ... (optional) Additional query parameters (e.g. limit, offset).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Object.data — Object.data","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Object.data — Object.data","text":"","code":"if (FALSE) { # \\dontrun{ Object.data(\"1234567890\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Object.delete — Object.delete","title":"Object.delete — Object.delete","text":"Delete specific object QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object.delete — Object.delete","text":"","code":"Object.delete(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object.delete — Object.delete","text":"id ID object. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.delete.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Object.delete — Object.delete","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.delete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Object.delete — Object.delete","text":"","code":"if (FALSE) { # \\dontrun{ Object.delete(\"1234567890\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.disable_global_beacon.html","id":null,"dir":"Reference","previous_headings":"","what":"Object.disable_global_beacon — Object.disable_global_beacon","title":"Object.disable_global_beacon — Object.disable_global_beacon","text":"Disables Global Beacon specified dataset.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.disable_global_beacon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object.disable_global_beacon — Object.disable_global_beacon","text":"","code":"Object.disable_global_beacon(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.disable_global_beacon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object.disable_global_beacon — Object.disable_global_beacon","text":"id ID QuartzBio EDP dataset. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.disable_global_beacon.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Object.disable_global_beacon — Object.disable_global_beacon","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.disable_global_beacon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Object.disable_global_beacon — Object.disable_global_beacon","text":"","code":"if (FALSE) { # \\dontrun{ Object.disable_global_beacon(\"1234567890\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.enable_global_beacon.html","id":null,"dir":"Reference","previous_headings":"","what":"Object.enable_global_beacon — Object.enable_global_beacon","title":"Object.enable_global_beacon — Object.enable_global_beacon","text":"Enables Global Beacon specified dataset.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.enable_global_beacon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object.enable_global_beacon — Object.enable_global_beacon","text":"","code":"Object.enable_global_beacon(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.enable_global_beacon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object.enable_global_beacon — Object.enable_global_beacon","text":"id ID QuartzBio EDP dataset. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.enable_global_beacon.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Object.enable_global_beacon — Object.enable_global_beacon","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.enable_global_beacon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Object.enable_global_beacon — Object.enable_global_beacon","text":"","code":"if (FALSE) { # \\dontrun{ Object.enable_global_beacon(\"1234567890\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Object.fields — Object.fields","title":"Object.fields — Object.fields","text":"Retrieves list fields file (JSON, CSV, TSV).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object.fields — Object.fields","text":"","code":"Object.fields(id, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object.fields — Object.fields","text":"id ID QuartzBio EDP file (vault object). env (optional) Custom client environment. ... (optional) Additional query parameters (e.g. limit, offset).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.fields.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Object.fields — Object.fields","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.fields.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Object.fields — Object.fields","text":"","code":"if (FALSE) { # \\dontrun{ Object.fields(\"1234567890\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.get_by_full_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Object.get_by_full_path — Object.get_by_full_path","title":"Object.get_by_full_path — Object.get_by_full_path","text":"helper function get object QuartzBio EDP full path.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.get_by_full_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object.get_by_full_path — Object.get_by_full_path","text":"","code":"Object.get_by_full_path(full_path, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.get_by_full_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object.get_by_full_path — Object.get_by_full_path","text":"full_path full path object. env (optional) Custom client environment. ... (optional) Additional query parameters.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.get_by_full_path.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Object.get_by_full_path — Object.get_by_full_path","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.get_by_full_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Object.get_by_full_path — Object.get_by_full_path","text":"","code":"if (FALSE) { # \\dontrun{ Object.get_by_full_path(\"solvebio:public:/ClinVar\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.get_by_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Object.get_by_path — Object.get_by_path","title":"Object.get_by_path — Object.get_by_path","text":"helper function get object QuartzBio EDP path. Used pass-function Vault methods.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.get_by_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object.get_by_path — Object.get_by_path","text":"","code":"Object.get_by_path(path, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.get_by_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object.get_by_path — Object.get_by_path","text":"path path object, relative vault. env (optional) Custom client environment. ... (optional) Additional query parameters.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.get_by_path.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Object.get_by_path — Object.get_by_path","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.get_by_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Object.get_by_path — Object.get_by_path","text":"","code":"if (FALSE) { # \\dontrun{ Object.get_by_path(\"/ClinVar\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.get_download_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Object.get_download_url — Object.get_download_url","title":"Object.get_download_url — Object.get_download_url","text":"Helper method get download URL file object.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.get_download_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object.get_download_url — Object.get_download_url","text":"","code":"Object.get_download_url(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.get_download_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object.get_download_url — Object.get_download_url","text":"id ID object. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.get_download_url.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Object.get_download_url — Object.get_download_url","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.get_download_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Object.get_download_url — Object.get_download_url","text":"","code":"if (FALSE) { # \\dontrun{ Object.get_download_url(\"1234567890\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.get_global_beacon_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Object.get_global_beacon_status — Object.get_global_beacon_status","title":"Object.get_global_beacon_status — Object.get_global_beacon_status","text":"Retrieves global beacon status specified dataset.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.get_global_beacon_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object.get_global_beacon_status — Object.get_global_beacon_status","text":"","code":"Object.get_global_beacon_status(   id,   raise_on_disabled = FALSE,   env = get_connection() )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.get_global_beacon_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object.get_global_beacon_status — Object.get_global_beacon_status","text":"id ID QuartzBio EDP dataset. raise_on_disabled Whether raise exception Global Beacon disabled return NULL. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.get_global_beacon_status.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Object.get_global_beacon_status — Object.get_global_beacon_status","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.get_global_beacon_status.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Object.get_global_beacon_status — Object.get_global_beacon_status","text":"","code":"if (FALSE) { # \\dontrun{ Object.get_global_beacon_status(\"1234567890\") Object.get_global_beacon_status(\"1234567890\", raise_on_disabled = TRUE) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.get_or_upload_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Object.get_or_upload_file — Object.get_or_upload_file","title":"Object.get_or_upload_file — Object.get_or_upload_file","text":"Upload local file vault QuartzBio EDP , yet exist (name, provided path). vault path provided parent directory uploaded file. Accepts arguments Object.upload_file.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.get_or_upload_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object.get_or_upload_file — Object.get_or_upload_file","text":"","code":"Object.get_or_upload_file(   local_path,   vault_id,   vault_path,   filename,   env = get_connection() )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.get_or_upload_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object.get_or_upload_file — Object.get_or_upload_file","text":"local_path path local file vault_id QuartzBio EDP vault ID vault_path remote path vault filename (optional) filename uploaded file vault (default: basename local_path) env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.get_or_upload_file.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Object.get_or_upload_file — Object.get_or_upload_file","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.get_or_upload_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Object.get_or_upload_file — Object.get_or_upload_file","text":"","code":"if (FALSE) { # \\dontrun{ Object.get_or_upload_file(\"my_file.json.gz\", vault$id, \"/parent/directory/\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.html","id":null,"dir":"Reference","previous_headings":"","what":"fetches an object. — Object","title":"fetches an object. — Object","text":"fetches object.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fetches an object. — Object","text":"","code":"Object(   id = NULL,   full_path = NULL,   path = NULL,   vault_id = NULL,   object_type = NULL,   conn = get_connection() )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fetches an object. — Object","text":"id Object ID full_path Object full path, including account, vault path. path path object, folders (e.g. \"/d1/d2/foo.csv\"). vault_id Vault ID string (e.g. \"19\"). object_type type object, one  \"file\", \"folder\", \"dataset\". conn EDP connection object (named list environment)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.query.html","id":null,"dir":"Reference","previous_headings":"","what":"Object.query — Object.query","title":"Object.query — Object.query","text":"Queries QuartzBio EDP file (vault object) returns R data frame containing records. Returns single page results otherwise (default).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object.query — Object.query","text":"","code":"Object.query(id, paginate = FALSE, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object.query — Object.query","text":"id ID QuartzBio EDP file (vault object). paginate set TRUE, retrieves records (memory permitting). env (optional) Custom client environment. ... (optional) Additional query parameters (e.g. filters, limit, offset).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.query.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Object.query — Object.query","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Object.query — Object.query","text":"","code":"if (FALSE) { # \\dontrun{ Object.query(\"12345678790\", paginate = TRUE) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.retrieve.html","id":null,"dir":"Reference","previous_headings":"","what":"Object.retrieve — Object.retrieve","title":"Object.retrieve — Object.retrieve","text":"Retrieves metadata specific object QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.retrieve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object.retrieve — Object.retrieve","text":"","code":"Object.retrieve(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.retrieve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object.retrieve — Object.retrieve","text":"id ID object. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.retrieve.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Object.retrieve — Object.retrieve","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.retrieve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Object.retrieve — Object.retrieve","text":"","code":"if (FALSE) { # \\dontrun{ Object.retrieve(\"1234567890\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.update.html","id":null,"dir":"Reference","previous_headings":"","what":"Object.update — Object.update","title":"Object.update — Object.update","text":"Updates attributes existing vault object.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object.update — Object.update","text":"","code":"Object.update(id, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object.update — Object.update","text":"id ID vault update. env (optional) Custom client environment. ... Object attributes change.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.update.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Object.update — Object.update","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.update.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Object.update — Object.update","text":"","code":"if (FALSE) { # \\dontrun{ Object.update(   id = \"1234\",   filename = \"New Name\", ) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.upload_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Object.upload_file — Object.upload_file","title":"Object.upload_file — Object.upload_file","text":"Upload local file vault QuartzBio EDP. vault path provided parent directory uploaded file.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.upload_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object.upload_file — Object.upload_file","text":"","code":"Object.upload_file(   local_path,   vault_id,   vault_path,   filename,   env = get_connection() )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.upload_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object.upload_file — Object.upload_file","text":"local_path path local file vault_id QuartzBio EDP vault ID vault_path remote path vault filename (optional) filename uploaded file vault (default: basename local_path) env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.upload_file.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Object.upload_file — Object.upload_file","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object.upload_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Object.upload_file — Object.upload_file","text":"","code":"if (FALSE) { # \\dontrun{ Object.upload_file(\"my_file.json.gz\", vault$id, \"/parent/directory/\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object_create.html","id":null,"dir":"Reference","previous_headings":"","what":"creates an Object. — Object_create","title":"creates an Object. — Object_create","text":"creates Object.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"creates an Object. — Object_create","text":"","code":"Object_create(   vault_id,   filename,   object_type,   parent_object_id = NULL,   description = NULL,   metadata = NULL,   tags = NULL,   storage_class = NULL,   capacity = NULL,   mimetype = NULL,   size = NULL,   md5 = NULL,   conn = get_connection() )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"creates an Object. — Object_create","text":"vault_id Vault ID string (e.g. \"19\"). filename Object filename, without parent folder (e.g. \"foo.csv\") object_type type object, one  \"file\", \"folder\", \"dataset\". parent_object_id ID parent Object. description description string. metadata metadata named list. tags list tags character vector. storage_class Storage class vault ('Standard', 'Standard-IA', 'Essential', 'Temporary', 'Performance', 'Archive') string. capacity dataset capacity level (small, medium, large). mimetype MIME type Object. size size object. md5 MD5 fingerprint, string. conn EDP connection object (named list environment)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"creates an Object. — Object_create","text":"object list class Object","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object_update.html","id":null,"dir":"Reference","previous_headings":"","what":"updates an Object. — Object_update","title":"updates an Object. — Object_update","text":"updates Object.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"updates an Object. — Object_update","text":"","code":"Object_update(   id,   filename = NULL,   object_type = NULL,   parent_object_id = NULL,   description = NULL,   metadata = NULL,   tags = NULL,   storage_class = NULL,   conn = get_connection() )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"updates an Object. — Object_update","text":"id Object ID filename Object filename, without parent folder (e.g. \"foo.csv\") object_type type object, one  \"file\", \"folder\", \"dataset\". parent_object_id ID parent Object. description description string. metadata metadata named list. tags list tags character vector. storage_class Storage class vault ('Standard', 'Standard-IA', 'Essential', 'Temporary', 'Performance', 'Archive') string. conn EDP connection object (named list environment)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Object_update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"updates an Object. — Object_update","text":"object list class Object","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Objects.html","id":null,"dir":"Reference","previous_headings":"","what":"fetches a list of objects (files, folders, datasets) — Objects","title":"fetches a list of objects (files, folders, datasets) — Objects","text":"fetches list objects (files, folders, datasets)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Objects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fetches a list of objects (files, folders, datasets) — Objects","text":"","code":"Objects(   vault_id = NULL,   vault_name = NULL,   vault_full_path = NULL,   filename = NULL,   path = NULL,   object_type = NULL,   depth = NULL,   query = NULL,   regex = NULL,   glob = NULL,   ancestor_id = NULL,   min_distance = NULL,   tag = NULL,   storage_class = NULL,   limit = NULL,   page = NULL,   conn = get_connection() )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Objects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fetches a list of objects (files, folders, datasets) — Objects","text":"vault_id Vault ID string (e.g. \"19\"). vault_name Vault name string (e.g. \"Public\"). vault_full_path Vault full path, string (e.g. \"quartzbio:Public\") filename Object filename, without parent folder (e.g. \"foo.csv\") path path object, folders (e.g. \"/d1/d2/foo.csv\"). object_type type object, one  \"file\", \"folder\", \"dataset\". depth depth object Vault integer (0 means root) query string matches objects whose path contains string. regex regular expression, string, filter results . glob glob (full path wildcard characters) searches objects matching paths (case-insensitive). ancestor_id object ID ancestor, filtering. min_distance used conjuction ancestor_id filter include objects minimum distance ancestor. tag single tag string. storage_class Storage class vault ('Standard', 'Standard-IA', 'Essential', 'Temporary', 'Performance', 'Archive') string. limit maximum number elements fetch, integer. See also page. page number page fetch, integer. starts 1. See also limit. conn EDP connection object (named list environment)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/SavedQuery.all.html","id":null,"dir":"Reference","previous_headings":"","what":"SavedQuery.all — SavedQuery.all","title":"SavedQuery.all — SavedQuery.all","text":"Retrieves saved queries QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/SavedQuery.all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SavedQuery.all — SavedQuery.all","text":"","code":"SavedQuery.all(env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/SavedQuery.all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SavedQuery.all — SavedQuery.all","text":"env (optional) Custom client environment. ... (optional) Additional query parameters (e.g. page).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/SavedQuery.all.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"SavedQuery.all — SavedQuery.all","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/SavedQuery.all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SavedQuery.all — SavedQuery.all","text":"","code":"if (FALSE) { # \\dontrun{ SavedQuery.all() } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/SavedQuery.create.html","id":null,"dir":"Reference","previous_headings":"","what":"SavedQuery.create — SavedQuery.create","title":"SavedQuery.create — SavedQuery.create","text":"Create QuartzBio EDP saved query.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/SavedQuery.create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SavedQuery.create — SavedQuery.create","text":"","code":"SavedQuery.create(env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/SavedQuery.create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SavedQuery.create — SavedQuery.create","text":"env (optional) Custom client environment. ... (optional) Saved query attributes.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/SavedQuery.create.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"SavedQuery.create — SavedQuery.create","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/SavedQuery.create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SavedQuery.create — SavedQuery.create","text":"","code":"if (FALSE) { # \\dontrun{ SavedQuery.create(name = \"My Dataset Template\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/SavedQuery.delete.html","id":null,"dir":"Reference","previous_headings":"","what":"SavedQuery.delete — SavedQuery.delete","title":"SavedQuery.delete — SavedQuery.delete","text":"Deletes specific saved query QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/SavedQuery.delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SavedQuery.delete — SavedQuery.delete","text":"","code":"SavedQuery.delete(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/SavedQuery.delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SavedQuery.delete — SavedQuery.delete","text":"id String ID QuartzBio EDP saved query. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/SavedQuery.delete.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"SavedQuery.delete — SavedQuery.delete","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/SavedQuery.delete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SavedQuery.delete — SavedQuery.delete","text":"","code":"if (FALSE) { # \\dontrun{ SavedQuery.delete(12345) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/SavedQuery.retrieve.html","id":null,"dir":"Reference","previous_headings":"","what":"SavedQuery.retrieve — SavedQuery.retrieve","title":"SavedQuery.retrieve — SavedQuery.retrieve","text":"Retrieves specific saved query QuartzBio EDP ID.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/SavedQuery.retrieve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SavedQuery.retrieve — SavedQuery.retrieve","text":"","code":"SavedQuery.retrieve(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/SavedQuery.retrieve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SavedQuery.retrieve — SavedQuery.retrieve","text":"id String ID QuartzBio EDP saved query. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/SavedQuery.retrieve.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"SavedQuery.retrieve — SavedQuery.retrieve","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/SavedQuery.retrieve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SavedQuery.retrieve — SavedQuery.retrieve","text":"","code":"if (FALSE) { # \\dontrun{ SavedQuery.retrieve(12345) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/SavedQuery.update.html","id":null,"dir":"Reference","previous_headings":"","what":"SavedQuery.update — SavedQuery.update","title":"SavedQuery.update — SavedQuery.update","text":"Updates attributes existing saved query.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/SavedQuery.update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SavedQuery.update — SavedQuery.update","text":"","code":"SavedQuery.update(id, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/SavedQuery.update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SavedQuery.update — SavedQuery.update","text":"id ID saved query update. env (optional) Custom client environment. ... Saved query attributes change.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/SavedQuery.update.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"SavedQuery.update — SavedQuery.update","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/SavedQuery.update.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SavedQuery.update — SavedQuery.update","text":"","code":"if (FALSE) { # \\dontrun{ SavedQuery.update(   id = \"1234\",   name = \"New query Name\", ) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Task.all.html","id":null,"dir":"Reference","previous_headings":"","what":"Task.all — Task.all","title":"Task.all — Task.all","text":"Retrieves metadata tasks QuartzBio EDP accessible current user.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Task.all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Task.all — Task.all","text":"","code":"Task.all(env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Task.all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Task.all — Task.all","text":"env (optional) Custom client environment. ... (optional) Additional query parameters.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Task.all.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Task.all — Task.all","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Task.all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Task.all — Task.all","text":"","code":"if (FALSE) { # \\dontrun{ Task.all() } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Task.follow.html","id":null,"dir":"Reference","previous_headings":"","what":"Task.follow — Task.follow","title":"Task.follow — Task.follow","text":"helper function follow specific task gets completed.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Task.follow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Task.follow — Task.follow","text":"","code":"Task.follow(id, env = get_connection(), interval = 2)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Task.follow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Task.follow — Task.follow","text":"id String ID task. env (optional) Custom client environment. interval Delay seconds completion status query","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Task.follow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Task.follow — Task.follow","text":"task object","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Task.follow.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Task.follow — Task.follow","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Task.follow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Task.follow — Task.follow","text":"","code":"if (FALSE) { # \\dontrun{ Task.follow(\"1234567890\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Task.html","id":null,"dir":"Reference","previous_headings":"","what":"fetches a task. — Task","title":"fetches a task. — Task","text":"fetches task.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Task.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fetches a task. — Task","text":"","code":"Task(task_id, conn = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Task.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fetches a task. — Task","text":"task_id (ECS) Task ID string. conn EDP connection object (named list environment)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Task.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fetches a task. — Task","text":"tasks ECSTask object, NULL none found.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Task.retrieve.html","id":null,"dir":"Reference","previous_headings":"","what":"Task.retrieve — Task.retrieve","title":"Task.retrieve — Task.retrieve","text":"Retrieves metadata specific task QuartzBio EDP.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Task.retrieve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Task.retrieve — Task.retrieve","text":"","code":"Task.retrieve(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Task.retrieve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Task.retrieve — Task.retrieve","text":"id ID task. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Task.retrieve.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Task.retrieve — Task.retrieve","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Task.retrieve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Task.retrieve — Task.retrieve","text":"","code":"if (FALSE) { # \\dontrun{ Task.retrieve(\"1234567890\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Task_wait_for_completion.html","id":null,"dir":"Reference","previous_headings":"","what":"Waits for a task to be completed (or failed). — Task_wait_for_completion","title":"Waits for a task to be completed (or failed). — Task_wait_for_completion","text":"N.B: using retries == 0 immediately timeout return FALSE. convenient unit testing example","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Task_wait_for_completion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Waits for a task to be completed (or failed). — Task_wait_for_completion","text":"","code":"Task_wait_for_completion(   task_id,   interval = 3,   retries = 30,   recursive = TRUE,   conn = get_connection() )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Task_wait_for_completion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Waits for a task to be completed (or failed). — Task_wait_for_completion","text":"task_id (ECS) Task ID string. interval time seconds wait retrying retries number attempts perform check task completion recursive whether also wait subtasks conn EDP connection object (named list environment)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Task_wait_for_completion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Waits for a task to be completed (or failed). — Task_wait_for_completion","text":"TRUE task finished (completed failed), FALSE number retries exceeded (~ timeout).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Tasks.html","id":null,"dir":"Reference","previous_headings":"","what":"fetches a list of tasks. — Tasks","title":"fetches a list of tasks. — Tasks","text":"fetches list tasks.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Tasks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fetches a list of tasks. — Tasks","text":"","code":"Tasks(   target_object_id = NULL,   parent_task_id = NULL,   task_type = NULL,   status = NULL,   alive = NULL,   limit = NULL,   page = NULL,   conn = get_connection() )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Tasks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fetches a list of tasks. — Tasks","text":"target_object_id object ID fetch tasks parent_task_id find children task task_type find tasks type task_type status Task status, one (running, queued, pending, completed, failed ) alive whether select Tasks alive, .e. finished failed. limit maximum number elements fetch, integer. See also page. page number page fetch, integer. starts 1. See also limit. conn EDP connection object (named list environment)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Tasks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fetches a list of tasks. — Tasks","text":"list Tasks ECSTaskList object.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/User.html","id":null,"dir":"Reference","previous_headings":"","what":"fetches user information. — User","title":"fetches user information. — User","text":"fetches  user information.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/User.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fetches user information. — User","text":"","code":"User(conn = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/User.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fetches user information. — User","text":"conn EDP connection object (named list environment)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/User.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fetches user information. — User","text":"connected user information User object","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/User.retrieve.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves information about the current user — User.retrieve","title":"Retrieves information about the current user — User.retrieve","text":"Retrieves information current user","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/User.retrieve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves information about the current user — User.retrieve","text":"","code":"User.retrieve(env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/User.retrieve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves information about the current user — User.retrieve","text":"env Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.all.html","id":null,"dir":"Reference","previous_headings":"","what":"Vault.all — Vault.all","title":"Vault.all — Vault.all","text":"Retrieves metadata accessible vaults.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vault.all — Vault.all","text":"","code":"Vault.all(..., env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vault.all — Vault.all","text":"... (optional) Additional query parameters (e.g. limit, offset). env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.all.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Vault.all — Vault.all","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vault.all — Vault.all","text":"","code":"if (FALSE) { # \\dontrun{ Vault.all() } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.create.html","id":null,"dir":"Reference","previous_headings":"","what":"Vault.create — Vault.create","title":"Vault.create — Vault.create","text":"Create new QuartzBio EDP vault.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vault.create — Vault.create","text":"","code":"Vault.create(name, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vault.create — Vault.create","text":"name unique name vault. env (optional) Custom client environment. ... (optional) Additional vault attributes.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.create.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Vault.create — Vault.create","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vault.create — Vault.create","text":"","code":"if (FALSE) { # \\dontrun{ Vault.create(name = \"my-domain:MyVault\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.create_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Vault.create_dataset — Vault.create_dataset","title":"Vault.create_dataset — Vault.create_dataset","text":"Create new dataset vault.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.create_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vault.create_dataset — Vault.create_dataset","text":"","code":"Vault.create_dataset(id, path, name, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.create_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vault.create_dataset — Vault.create_dataset","text":"id ID vault. path path dataset, within vault. name name (filename) dataset. env (optional) Custom client environment. ... (optional) Additional dataset creation parameters.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.create_dataset.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Vault.create_dataset — Vault.create_dataset","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.create_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vault.create_dataset — Vault.create_dataset","text":"","code":"if (FALSE) { # \\dontrun{ vault <- Vault.get_personal_vault() Vault.create_dataset(vault$id, path = \"/\", name = \"My Dataset\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.create_folder.html","id":null,"dir":"Reference","previous_headings":"","what":"Vault.create_folder — Vault.create_folder","title":"Vault.create_folder — Vault.create_folder","text":"Create new folder vault.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.create_folder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vault.create_folder — Vault.create_folder","text":"","code":"Vault.create_folder(id, path, recursive = FALSE, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.create_folder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vault.create_folder — Vault.create_folder","text":"id ID vault. path path folder, within vault. recursive Create parent directories yet exist (default: FALSE). env (optional) Custom client environment. ... (optional) Additional folder creation parameters.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.create_folder.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Vault.create_folder — Vault.create_folder","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.create_folder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vault.create_folder — Vault.create_folder","text":"","code":"if (FALSE) { # \\dontrun{ vault <- Vault.get_personal_vault() Vault.create_folder(vault$id, \"/My Folder\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Vault.datasets — Vault.datasets","title":"Vault.datasets — Vault.datasets","text":"Retrieves datasets specific vault.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vault.datasets — Vault.datasets","text":"","code":"Vault.datasets(id, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.datasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vault.datasets — Vault.datasets","text":"id ID vault. env (optional) Custom client environment. ... (optional) Additional query parameters (e.g. limit, offset).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.datasets.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Vault.datasets — Vault.datasets","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.datasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vault.datasets — Vault.datasets","text":"","code":"if (FALSE) { # \\dontrun{ vault <- Vault.get_personal_vault() Vault.datasets(vault$id) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Vault.delete — Vault.delete","title":"Vault.delete — Vault.delete","text":"Delete specific vault QuartzBio EDP. operation undone.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vault.delete — Vault.delete","text":"","code":"Vault.delete(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vault.delete — Vault.delete","text":"id String ID QuartzBio EDP vault. env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.delete.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Vault.delete — Vault.delete","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.delete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vault.delete — Vault.delete","text":"","code":"if (FALSE) { # \\dontrun{ Vault.delete(\"1\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.files.html","id":null,"dir":"Reference","previous_headings":"","what":"Vault.files — Vault.files","title":"Vault.files — Vault.files","text":"Retrieves files specific vault.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vault.files — Vault.files","text":"","code":"Vault.files(id, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vault.files — Vault.files","text":"id ID vault. env (optional) Custom client environment. ... (optional) Additional query parameters (e.g. limit, offset).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.files.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Vault.files — Vault.files","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vault.files — Vault.files","text":"","code":"if (FALSE) { # \\dontrun{ vault <- Vault.get_personal_vault() Vault.files(vault$id) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.folders.html","id":null,"dir":"Reference","previous_headings":"","what":"Vault.folders — Vault.folders","title":"Vault.folders — Vault.folders","text":"Retrieves folders specific vault.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.folders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vault.folders — Vault.folders","text":"","code":"Vault.folders(id, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.folders.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vault.folders — Vault.folders","text":"id ID vault. env (optional) Custom client environment. ... (optional) Additional query parameters (e.g. limit, offset).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.folders.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Vault.folders — Vault.folders","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.folders.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vault.folders — Vault.folders","text":"","code":"if (FALSE) { # \\dontrun{ vault <- Vault.get_personal_vault() Vault.folders(vault$id) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.get_by_full_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Vault.get_by_full_path — Vault.get_by_full_path","title":"Vault.get_by_full_path — Vault.get_by_full_path","text":"Retrieves specific vault full path (domain:vault).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.get_by_full_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vault.get_by_full_path — Vault.get_by_full_path","text":"","code":"Vault.get_by_full_path(full_path, verbose = TRUE, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.get_by_full_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vault.get_by_full_path — Vault.get_by_full_path","text":"full_path full path QuartzBio EDP vault. verbose Print warning/error messages (default: TRUE). env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.get_by_full_path.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Vault.get_by_full_path — Vault.get_by_full_path","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.get_by_full_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vault.get_by_full_path — Vault.get_by_full_path","text":"","code":"if (FALSE) { # \\dontrun{ Vault.get_by_full_path(\"QuartzBio EDP:Public\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.get_or_create_by_full_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Vault.get_or_create_by_full_path — Vault.get_or_create_by_full_path","title":"Vault.get_or_create_by_full_path — Vault.get_or_create_by_full_path","text":"Retrieves creates specific vault full path (domain:vault).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.get_or_create_by_full_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vault.get_or_create_by_full_path — Vault.get_or_create_by_full_path","text":"","code":"Vault.get_or_create_by_full_path(full_path, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.get_or_create_by_full_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vault.get_or_create_by_full_path — Vault.get_or_create_by_full_path","text":"full_path full path QuartzBio EDP vault. env (optional) Custom client environment. ... (optional) Additional parameters.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.get_or_create_by_full_path.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Vault.get_or_create_by_full_path — Vault.get_or_create_by_full_path","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.get_or_create_by_full_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vault.get_or_create_by_full_path — Vault.get_or_create_by_full_path","text":"","code":"if (FALSE) { # \\dontrun{ Vault.get_or_create_by_full_path(\"My New Vault\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.get_personal_vault.html","id":null,"dir":"Reference","previous_headings":"","what":"Vault.get_personal_vault — Vault.get_personal_vault","title":"Vault.get_personal_vault — Vault.get_personal_vault","text":"Retrieves current users\"s personal, private vault.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.get_personal_vault.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vault.get_personal_vault — Vault.get_personal_vault","text":"","code":"Vault.get_personal_vault(env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.get_personal_vault.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vault.get_personal_vault — Vault.get_personal_vault","text":"env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.get_personal_vault.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Vault.get_personal_vault — Vault.get_personal_vault","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.get_personal_vault.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vault.get_personal_vault — Vault.get_personal_vault","text":"","code":"if (FALSE) { # \\dontrun{ Vault.get_personal_vault() } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.html","id":null,"dir":"Reference","previous_headings":"","what":"fetches a vault — Vault","title":"fetches a vault — Vault","text":"N.B: called without id, full_path name, fetches personal vault connected user. dies multiple vaults matched","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fetches a vault — Vault","text":"","code":"Vault(id = NULL, full_path = NULL, name = NULL, conn = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fetches a vault — Vault","text":"id Vault ID object fetch full_path full path vault fetch name name vault fetch conn EDP connection object (named list environment)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fetches a vault — Vault","text":"vault list class Vault, NULL matching vault found","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fetches a vault — Vault","text":"","code":"if (FALSE) { # \\dontrun{ # with no argument, fetch the connected user personal vault v <- Vault()  # by id v2 <- Vault(v$id)  # by full_path v2 <- Vault(full_path = v$full_path)  # by name v2 <- Vault(name = \"Public\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.objects.html","id":null,"dir":"Reference","previous_headings":"","what":"Vault.objects — Vault.objects","title":"Vault.objects — Vault.objects","text":"Retrieves objects specific vault.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.objects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vault.objects — Vault.objects","text":"","code":"Vault.objects(id, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.objects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vault.objects — Vault.objects","text":"id ID vault. env (optional) Custom client environment. ... (optional) Additional query parameters (e.g. limit, offset).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.objects.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Vault.objects — Vault.objects","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.objects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vault.objects — Vault.objects","text":"","code":"if (FALSE) { # \\dontrun{ vault <- Vault.get_personal_vault() Vault.objects(vault$id) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.retrieve.html","id":null,"dir":"Reference","previous_headings":"","what":"Vault.retrieve — Vault.retrieve","title":"Vault.retrieve — Vault.retrieve","text":"Retrieves metadata specific QuartzBio EDP vault.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.retrieve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vault.retrieve — Vault.retrieve","text":"","code":"Vault.retrieve(id, env = get_connection())"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.retrieve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vault.retrieve — Vault.retrieve","text":"id String ID QuartzBio EDP vault env (optional) Custom client environment.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.retrieve.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Vault.retrieve — Vault.retrieve","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.retrieve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vault.retrieve — Vault.retrieve","text":"","code":"if (FALSE) { # \\dontrun{ Vault.retrieve(\"1234567890\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.search.html","id":null,"dir":"Reference","previous_headings":"","what":"Vault.search — Vault.search","title":"Vault.search — Vault.search","text":"Search objects specific vault.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vault.search — Vault.search","text":"","code":"Vault.search(id, query, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vault.search — Vault.search","text":"id ID vault. query search query. env (optional) Custom client environment. ... (optional) Additional query parameters (e.g. limit, offset).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.search.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Vault.search — Vault.search","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vault.search — Vault.search","text":"","code":"if (FALSE) { # \\dontrun{ vault <- Vault.get_personal_vault() Vault.search(\"test\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.update.html","id":null,"dir":"Reference","previous_headings":"","what":"Vault.update — Vault.update","title":"Vault.update — Vault.update","text":"Updates attributes existing vault.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vault.update — Vault.update","text":"","code":"Vault.update(id, env = get_connection(), ...)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vault.update — Vault.update","text":"id ID vault update. env (optional) Custom client environment. ... Vault attributes change.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.update.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Vault.update — Vault.update","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault.update.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vault.update — Vault.update","text":"","code":"if (FALSE) { # \\dontrun{ Vault.update(   id = \"1234\",   name = \"New Vault Name\", ) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault_create.html","id":null,"dir":"Reference","previous_headings":"","what":"creates a new EDP vault or updates an existing one. — Vault_create","title":"creates a new EDP vault or updates an existing one. — Vault_create","text":"cf https://docs.solvebio.com/reference/vaults/vaults/#create","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"creates a new EDP vault or updates an existing one. — Vault_create","text":"","code":"Vault_create(   name,   description = NULL,   metadata = NULL,   tags = NULL,   storage_class = NULL,   conn = get_connection() )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"creates a new EDP vault or updates an existing one. — Vault_create","text":"name vault name create, string. description description string. metadata metadata named list. tags list tags character vector. storage_class Storage class vault ('Standard', 'Standard-IA', 'Essential', 'Temporary', 'Performance', 'Archive') string. conn EDP connection object (named list environment)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault_create.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"creates a new EDP vault or updates an existing one. — Vault_create","text":"id NULL, create new vault, otherwise update vault corresponding id","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault_create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"creates a new EDP vault or updates an existing one. — Vault_create","text":"","code":"if (FALSE) { # \\dontrun{ # simplest form v <- Vault_create(\"my.new.vault\")  # using all params v <- Vault_create(   name = \"my.new.vault\",   description = \"This is my own vault\",   metadata = list(a = 1, b = \"toto\", sublist = list(x = \"str\")),   tags = c(\"TEST\", \"DATA\"),   storage_class = \"Performance\",   conn = conn ) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault_update.html","id":null,"dir":"Reference","previous_headings":"","what":"updates a vault — Vault_update","title":"updates a vault — Vault_update","text":"N.B: updated vault properties overwritten, merged! id NULL, create new vault","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"updates a vault — Vault_update","text":"","code":"Vault_update(   id,   name = NULL,   description = NULL,   metadata = NULL,   tags = NULL,   storage_class = NULL,   conn = get_connection() )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"updates a vault — Vault_update","text":"id Vault ID object fetch name vault name create, string. description description string. metadata metadata named list. tags list tags character vector. storage_class Storage class vault ('Standard', 'Standard-IA', 'Essential', 'Temporary', 'Performance', 'Archive') string. conn EDP connection object (named list environment)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault_update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"updates a vault — Vault_update","text":"Vault object","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vault_update.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"updates a vault — Vault_update","text":"","code":"if (FALSE) { # \\dontrun{ v2 <- Vault_update(v$id,   name = name, description = \"desc\",   metadata = list(meta1 = \"toto\"), storage_class = \"Performance\", tags = \"A\" ) # using methods v3 <- update(v2, name = name, storage_class = \"Temporary\") v4 <- update(vault_id, tags = LETTERS[1:5]) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vaults.html","id":null,"dir":"Reference","previous_headings":"","what":"fetches a list of vaults — Vaults","title":"fetches a list of vaults — Vaults","text":"fetches list vaults","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vaults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fetches a list of vaults — Vaults","text":"","code":"Vaults(   vault_type = NULL,   tags = NULL,   user_id = NULL,   storage_class = NULL,   account_id = NULL,   page = NULL,   limit = NULL,   conn = get_connection() )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/Vaults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fetches a list of vaults — Vaults","text":"vault_type type vault ('user', 'general') string tags list tags character vector. user_id user id (User object) string storage_class Storage class vault ('Standard', 'Standard-IA', 'Essential', 'Temporary', 'Performance', 'Archive') string. account_id Account ID string. page number page fetch, integer. starts 1. See also limit. limit maximum number elements fetch, integer. See also page. conn EDP connection object (named list environment)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/autoconnect.html","id":null,"dir":"Reference","previous_headings":"","what":"tries to connect, using environment variables or the default profile — autoconnect","title":"tries to connect, using environment variables or the default profile — autoconnect","text":"tries connect, using environment variables default profile","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/autoconnect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tries to connect, using environment variables or the default profile — autoconnect","text":"","code":"autoconnect(check = FALSE)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/autoconnect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tries to connect, using environment variables or the default profile — autoconnect","text":"check whether check connection, mostly debugging purposes","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/autoconnect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"tries to connect, using environment variables or the default profile — autoconnect","text":"connection","code":""},{"path":[]},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/connect.html","id":null,"dir":"Reference","previous_headings":"","what":"connect to the QuartzBio EDP API and return the connection — connect","title":"connect to the QuartzBio EDP API and return the connection — connect","text":"connect QuartzBio EDP API return connection","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/connect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"connect to the QuartzBio EDP API and return the connection — connect","text":"","code":"connect(   secret = get_env(\"EDP_API_SECRET\", get_env(\"QUARTZBIO_ACCESS_TOKEN\",     get_env(\"QUARTZBIO_API_KEY\", get_env(\"SOLVEBIO_ACCESS_TOKEN\",     get_env(\"SOLVEBIO_API_KEY\"))))),   host = get_env(\"EDP_API_HOST\", get_env(\"QUARTZBIO_API_HOST\",     get_env(\"SOLVEBIO_API_HOST\"))),   check = TRUE )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/connect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"connect to the QuartzBio EDP API and return the connection — connect","text":"secret QuartzBio EDP API key  token string. Defaults EDP_API_SECRET environment variable set, otherwise QUARTZBIO_ACCESS_TOKEN var, QUARTZBIO_API_KEY, legacy SOLVEBIO_ACCESS_TOKEN var, SOLVEBIO_API_KEY var. host QuartzBio EDP API host string. Defaults EDP_API_HOST environment variable set, otherwise QUARTZBIO_API_HOST var, legacy SOLVEBIO_API_HOST var. check whether check connection, mostly debugging purposes","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/connect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"connect to the QuartzBio EDP API and return the connection — connect","text":"connection object","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/connect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"connect to the QuartzBio EDP API and return the connection — connect","text":"","code":"if (FALSE) { # \\dontrun{ #  using API key conn <- connect(\"MYKEY\") # using env vars conn <- connect() # using token and explicit host conn <- connect(\"MYTOKEN\", \"https://xxxx.yy.com\") } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/connect_with_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"connect to the QuartzBio EDP API using a saved profile — connect_with_profile","title":"connect to the QuartzBio EDP API using a saved profile — connect_with_profile","text":"connect QuartzBio EDP API using saved profile","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/connect_with_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"connect to the QuartzBio EDP API using a saved profile — connect_with_profile","text":"","code":"connect_with_profile(..., check = TRUE)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/connect_with_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"connect to the QuartzBio EDP API using a saved profile — connect_with_profile","text":"... Arguments passed read_connection_profile profile name profile, string path path connection profiles file, string check whether check connection, mostly debugging purposes","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/create_model_df_from_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"create a model data frame from a list of column names and some meta data fields. — create_model_df_from_fields","title":"create a model data frame from a list of column names and some meta data fields. — create_model_df_from_fields","text":"Creates model empty data frame list column names meta data fields EDP dataset.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/create_model_df_from_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create a model data frame from a list of column names and some meta data fields. — create_model_df_from_fields","text":"","code":"create_model_df_from_fields(cols, fields, titles = TRUE, ordering = TRUE)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/create_model_df_from_fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create a model data frame from a list of column names and some meta data fields. — create_model_df_from_fields","text":"cols list column names fields meta data fields EDP dataset titles Set dataframe column names per titles. Default TRUE ordering Set order columns based ordering. Default TRUE","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/create_model_df_from_fields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create a model data frame from a list of column names and some meta data fields. — create_model_df_from_fields","text":"model empty R dataframe","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/fetch_all.html","id":null,"dir":"Reference","previous_headings":"","what":"fetch all the pages for a possibly incomplete paginated API result — fetch_all","title":"fetch all the pages for a possibly incomplete paginated API result — fetch_all","text":"fetch pages possibly incomplete paginated API result","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/fetch_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fetch all the pages for a possibly incomplete paginated API result — fetch_all","text":"","code":"fetch_all(x, ..., parallel = FALSE, workers = 4, verbose = FALSE)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/fetch_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fetch all the pages for a possibly incomplete paginated API result — fetch_all","text":"x API result ... passed future.apply::future_lapply() parallel whether parallelize API calls. workers parallel mode, number concurrent requests make verbose whether output debugging information, mostly development","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/fetch_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fetch all the pages for a possibly incomplete paginated API result — fetch_all","text":"object resulting combining current object/page subsequent pages","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/fetch_next.html","id":null,"dir":"Reference","previous_headings":"","what":"fetch the next page of data if any — fetch_next","title":"fetch the next page of data if any — fetch_next","text":"fetch next page data ","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/fetch_next.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fetch the next page of data if any — fetch_next","text":"","code":"fetch_next(x)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/fetch_next.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fetch the next page of data if any — fetch_next","text":"x API result","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/fetch_next.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fetch the next page of data if any — fetch_next","text":"next page data, NULL none","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/fetch_prev.html","id":null,"dir":"Reference","previous_headings":"","what":"fetch the previous page of data if any — fetch_prev","title":"fetch the previous page of data if any — fetch_prev","text":"fetch previous page data ","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/fetch_prev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fetch the previous page of data if any — fetch_prev","text":"","code":"fetch_prev(x)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/fetch_prev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fetch the previous page of data if any — fetch_prev","text":"x API result","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/fetch_prev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fetch the previous page of data if any — fetch_prev","text":"previous page data, NULL none","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/filters.html","id":null,"dir":"Reference","previous_headings":"","what":"parses the maths-like syntax of filters. — filters","title":"parses the maths-like syntax of filters. — filters","text":"parses maths-like syntax filters.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/filters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"parses the maths-like syntax of filters. — filters","text":"","code":"filters(x)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/filters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"parses the maths-like syntax of filters. — filters","text":"x filters string parse","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/filters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"parses the maths-like syntax of filters. — filters","text":"download URL string","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/format_df_like_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a data frame like the model data frame — format_df_like_model","title":"Format a data frame like the model data frame — format_df_like_model","text":"format dataframe like model data frame columns order, field types, column names, \"field_\" attributes","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/format_df_like_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a data frame like the model data frame — format_df_like_model","text":"","code":"format_df_like_model(df, model)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/format_df_like_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a data frame like the model data frame — format_df_like_model","text":"df dataframe formatted model model dataframe","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/format_df_like_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a data frame like the model data frame — format_df_like_model","text":"formatted dataframe","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/generics.html","id":null,"dir":"Reference","previous_headings":"","what":"deletes an object from EDP — All generics","title":"deletes an object from EDP — All generics","text":"deletes object EDP fetches object using ID fetches vault related object","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/generics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"deletes an object from EDP — All generics","text":"","code":"delete(x, conn = attr(x, \"connection\"))  fetch(x, conn = attr(x, \"connection\"))  fetch_vaults(x, conn = attr(x, \"connection\"))"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/generics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"deletes an object from EDP — All generics","text":"x object delete conn EDP connection object (named list environment)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/generics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"deletes an object from EDP — All generics","text":"decorated object vault, NULL  applicable","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/get_connection.html","id":null,"dir":"Reference","previous_headings":"","what":"get the default connection if any — get_connection","title":"get the default connection if any — get_connection","text":"get default connection ","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/get_connection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get the default connection if any — get_connection","text":"","code":"get_connection(auto = TRUE)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/get_connection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get the default connection if any — get_connection","text":"auto whether automatically use autoconnect() default connection yet set","code":""},{"path":[]},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/login.html","id":null,"dir":"Reference","previous_headings":"","what":"login — login","title":"login — login","text":"Store verify QuartzBio EDP credentials.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/login.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"login — login","text":"","code":"login(   api_key = Sys.getenv(\"SOLVEBIO_API_KEY\"),   api_token = Sys.getenv(\"SOLVEBIO_ACCESS_TOKEN\"),   api_host = Sys.getenv(\"SOLVEBIO_API_HOST\") )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/login.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"login — login","text":"api_key QuartzBio EDP API key api_token QuartzBio EDP API token api_host QuartzBio EDP API host (default: https://api.solvebio.com)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/login.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"login — login","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/login.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"login — login","text":"","code":"if (FALSE) { # \\dontrun{ login() } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/old_params.html","id":null,"dir":"Reference","previous_headings":"","what":"shared old roxygen params — old_params","title":"shared old roxygen params — old_params","text":"shared old roxygen params","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/old_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"shared old roxygen params — old_params","text":"client_id client ID application. conn EDP connection object (named list environment) data TODO data_type data type cast expression result. env Custom client environment. expression EDP expression string. fields fields add. include_errors whether include errors output. is_list whether result expected list. raw whether return raw response. records data annotate data frame. ... Additional query parameters, passed .request().","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/old_params.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"shared old roxygen params — old_params","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/params.html","id":null,"dir":"Reference","previous_headings":"","what":"shared roxygen params — params","title":"shared roxygen params — params","text":"shared roxygen params","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"shared roxygen params — params","text":"account_id Account ID string. alive whether select Tasks alive, .e. finished failed. whether fetch data, iterating needed. ancestor_id object ID ancestor, filtering. as_data_frame whether convert results data frame. capacity dataset capacity level (small, medium, large). client_id client ID application. commit_mode four commit modes can selected depending scenario: append (default), overwrite, upsert, delete. conn EDP connection object (named list environment) dataset_id Dataset ID string data_type data type. one : auto (default) boolean - Either True, False, null date - string ISO 8601 format, example: 2017-03-29T14:52:01 double - double-precision 64-bit IEEE 754 floating point. float - single-precision 32-bit IEEE 754 floating point. integer     signed 32-bit integer minimum value -231 maximum value 231-1. long     signed 64-bit integer minimum value -263 maximum value 263-1. object     key/value, JSON-like object, similar Python dictionary. string     valid UTF-8 string 32,766 characters length. text     valid UTF-8 string length, indexed full-text search. blob     valid UTF-8 string length, indexed search. depth depth object Vault integer (0 means root) description description string. entity_type valid entity type: dataset - Dataset ID (510110013133189334) gene - gene (EGFR) genomic_region - genomic region (GRCH38-7-55019017-55211628) literature - PubMed ID (19915526) sample - sample identifier (TCGA-02-0001) variant - genomic variant (GRCH38-7-55181378-55181378-T) env Custom client environment. exclude_fields list fields exclude results, character vector. exclude_group_id group ID exclude. expression EDP xpressions Python-like formulas can used pull data datasets, calculate statistics, run advanced algorithms. facets valid facets objects. fields fields add. field_id Field object ID. file_id file Object ID. filename Object filename, without parent folder (e.g. \"foo.csv\") filters filter expression JSON string. full_path Object full path, including account, vault path. glob glob (full path wildcard characters) searches objects matching paths (case-insensitive). include_errors whether include errors output. is_list whether result expected list. limit maximum number elements fetch, integer. See also page. local_path path local file. md5 MD5 fingerprint, string. metadata metadata named list. mimetype MIME type Object. min_distance used conjuction ancestor_id filter include objects minimum distance ancestor. object_type type object, one  \"file\", \"folder\", \"dataset\". ordering list fields order/sort results , character vector. offset file offset (starts 0). page number page fetch, integer. starts 1. See also limit. path path object, folders (e.g. \"/d1/d2/foo.csv\"). parallel whether parallelize API calls. parent_object_id ID parent Object. query string matches objects whose path contains string. raw whether return raw response. records data annotate data frame. regex regular expression, string, filter results . size size object. status Task status, one (running, queued, pending, completed, failed ) storage_class Storage class vault ('Standard', 'Standard-IA', 'Essential', 'Temporary', 'Performance', 'Archive') string. sync whether proceed synchronous mode, .e wait sub tasks finish returning. tag single tag string. tags list tags character vector. target_fields list valid dataset fields create override import, character vector. task_id (ECS) Task ID string. url_template URL template one \"value\" sections interpolated field value displayed link dataset table. user_id user id (User object) string vault_id Vault ID string (e.g. \"19\"). vault_name Vault name string (e.g. \"Public\"). vault_full_path Vault full path, string (e.g. \"quartzbio:Public\") vault_path Vault path, string (e.g. \"/d1/d2/foo.csv\") vault_type type vault ('user', 'general') string workers parallel mode, number concurrent requests make ... Additional query parameters, passed .request().","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/params.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"shared roxygen params — params","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/protectedServer.html","id":null,"dir":"Reference","previous_headings":"","what":"protectedServer — protectedServer","title":"protectedServer — protectedServer","text":"Wraps existing Shiny server OAuth2 flow.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/protectedServer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"protectedServer — protectedServer","text":"","code":"protectedServer(   server,   client_id,   client_secret = NULL,   base_url = \"https://my.solvebio.com\" )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/protectedServer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"protectedServer — protectedServer","text":"server original Shiny server function. client_id application's client ID. client_secret (optional) application's client secret. base_url (optional) Override default login host (default: https://.solvebio.com).","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/protectedServer.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"protectedServer — protectedServer","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/protectedServer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"protectedServer — protectedServer","text":"","code":"if (FALSE) { # \\dontrun{ protectedServer(   server = server,   client_id = \"abcd1234\" ) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/protectedServerJS.html","id":null,"dir":"Reference","previous_headings":"","what":"protectedServerUI — protectedServerJS","title":"protectedServerUI — protectedServerJS","text":"Returns ShinyJS-compatible JS code support cookie-based token storage.","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/protectedServerJS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"protectedServerUI — protectedServerJS","text":"","code":"protectedServerJS()"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/protectedServerJS.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"protectedServerUI — protectedServerJS","text":"https://docs.solvebio.com/","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/protectedServerJS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"protectedServerUI — protectedServerJS","text":"","code":"if (FALSE) { # \\dontrun{ jscookie_src <- \"https://cdnjs.cloudflare.com/ajax/libs/js-cookie/2.2.0/js.cookie.js\" ui <- fluidPage(   shiny::tags$head(     shiny::tags$script(src = jscookie_src)   ),   useShinyjs(),   extendShinyjs(     text = quartzbio.edp::protectedServerJS(),     functions = c(\"enableCookieAuth\", \"getCookie\", \"setCookie\", \"rmCookie\")   ) ) } # }"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/read_connection_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"read a connection profile — read_connection_profile","title":"read a connection profile — read_connection_profile","text":"read connection profile","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/read_connection_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read a connection profile — read_connection_profile","text":"","code":"read_connection_profile(   profile = get_env(\"EDP_PROFILE\", \"default\"),   path = get_env(\"EDP_CONFIG\", \"~/.qb/edp.json\") )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/read_connection_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read a connection profile — read_connection_profile","text":"profile name profile, string path path connection profiles file, string","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/read_connection_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read a connection profile — read_connection_profile","text":"connection given profile named list, die profile","code":""},{"path":[]},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/save_connection_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"save a connection profile — save_connection_profile","title":"save a connection profile — save_connection_profile","text":"save connection profile","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/save_connection_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"save a connection profile — save_connection_profile","text":"","code":"save_connection_profile(   conn,   profile = get_env(\"EDP_PROFILE\", \"default\"),   path = get_env(\"EDP_CONFIG\", \"~/.qb/edp.json\"),   overwrite = FALSE )"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/save_connection_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"save a connection profile — save_connection_profile","text":"conn EDP connection object (named list environment) profile name profile, string path path connection profiles file, string overwrite whether overwrite existing profile","code":""},{"path":[]},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/set_connection.html","id":null,"dir":"Reference","previous_headings":"","what":"set the default connection — set_connection","title":"set the default connection — set_connection","text":"N.B: use conn=NULL unset default connection may die bad connection","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/set_connection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set the default connection — set_connection","text":"","code":"set_connection(conn, check = TRUE)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/set_connection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set the default connection — set_connection","text":"conn EDP connection object (named list environment) check whether check connection, mostly debugging purposes","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/test_connection.html","id":null,"dir":"Reference","previous_headings":"","what":"test a connection — test_connection","title":"test a connection — test_connection","text":"may die bad connection","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/test_connection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"test a connection — test_connection","text":"","code":"test_connection(conn)"},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/test_connection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"test a connection — test_connection","text":"conn EDP connection object (named list environment)","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/reference/test_connection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"test a connection — test_connection","text":"TRUE iff connection successful","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/news/index.html","id":"version-09919000","dir":"Changelog","previous_headings":"","what":"version 0.99.1.9000","title":"version 0.99.1.9000","text":"Improvements add GitHub workflows run R CMD check. (EDPDEV-2381) Bug Fixes Fixed shiny wrapper connect EDP new connection system. Removed createEnv use connect() shiny wrapper use new credential system. EDPDEV-2141 Fixed Dataset_import() limit number records can imported 5000 time. EDPDEV-1862 Fixed error occurring querying dataset containing list fields. Made changes format_df_like_model assign object class correctly list field values dataset. EDPDEV-911","code":""},{"path":"https://quartzbio.github.io/quartzbio.edp/news/index.html","id":"version-099","dir":"Changelog","previous_headings":"","what":"version 0.99","title":"version 0.99","text":"beta version former solvebio R package.Refactoring ot former solvebio R package. migration previous functions new interface started. refactoring connection functions: autoconnect(), set_connection(), connect_with_profile(). refactoring objects interfaces: Datasets(), Files(), Vaults(), Folders(). direct creation Datasets R data.frames. Dataset_query() parallelized (see fetch_next(), fetch_prev() fetch_all() functions). revamp filters() interface. Dataset(), Datasets() DatasetField() Dataset_create() Dataset_import() Dataset_query() File(), Files() File_download(), File_get_download_url() File_query(), File_read(), File_upload() Folder(), Folder_create(), Folders() Object(), Objects() Task(), Tasks() User() Vault(), Vaults() autoconnect() connect(), connect_with_profile() delete() fetch_next(), fetch_prev(),fetch_all() filters() fetch(), fetch_vaults()","code":""}]
